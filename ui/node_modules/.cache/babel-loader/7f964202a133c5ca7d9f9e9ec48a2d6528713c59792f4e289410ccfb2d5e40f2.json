{"ast":null,"code":"var n,\n  l,\n  u,\n  t,\n  i,\n  o,\n  r,\n  f,\n  e,\n  c = {},\n  s = [],\n  a = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,\n  h = Array.isArray;\nfunction v(n, l) {\n  for (var u in l) n[u] = l[u];\n  return n;\n}\nfunction p(n) {\n  var l = n.parentNode;\n  l && l.removeChild(n);\n}\nfunction y(l, u, t) {\n  var i,\n    o,\n    r,\n    f = {};\n  for (r in u) \"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : f[r] = u[r];\n  if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : t), \"function\" == typeof l && null != l.defaultProps) for (r in l.defaultProps) void 0 === f[r] && (f[r] = l.defaultProps[r]);\n  return d(l, f, i, o, null);\n}\nfunction d(n, t, i, o, r) {\n  var f = {\n    type: n,\n    props: t,\n    key: i,\n    ref: o,\n    __k: null,\n    __: null,\n    __b: 0,\n    __e: null,\n    __d: void 0,\n    __c: null,\n    constructor: void 0,\n    __v: null == r ? ++u : r,\n    __i: -1,\n    __u: 0\n  };\n  return null == r && null != l.vnode && l.vnode(f), f;\n}\nfunction _() {\n  return {\n    current: null\n  };\n}\nfunction g(n) {\n  return n.children;\n}\nfunction b(n, l) {\n  this.props = n, this.context = l;\n}\nfunction m(n, l) {\n  if (null == l) return n.__ ? m(n.__, n.__i + 1) : null;\n  for (var u; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n  return \"function\" == typeof n.type ? m(n) : null;\n}\nfunction w(n, u, t) {\n  var i,\n    o = n.__v,\n    r = o.__e,\n    f = n.__P;\n  if (f) return (i = v({}, o)).__v = o.__v + 1, l.vnode && l.vnode(i), M(f, i, o, n.__n, void 0 !== f.ownerSVGElement, 32 & o.__u ? [r] : null, u, null == r ? m(o) : r, !!(32 & o.__u), t), i.__v = o.__v, i.__.__k[i.__i] = i, i.__d = void 0, i.__e != r && k(i), i;\n}\nfunction k(n) {\n  var l, u;\n  if (null != (n = n.__) && null != n.__c) {\n    for (n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) {\n      n.__e = n.__c.base = u.__e;\n      break;\n    }\n    return k(n);\n  }\n}\nfunction x(n) {\n  (!n.__d && (n.__d = !0) && i.push(n) && !C.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || r)(C);\n}\nfunction C() {\n  var n,\n    u,\n    t,\n    o = [],\n    r = [];\n  for (i.sort(f); n = i.shift();) n.__d && (t = i.length, u = w(n, o, r) || u, 0 === t || i.length > t ? (j(o, u, r), r.length = o.length = 0, u = void 0, i.sort(f)) : u && l.__c && l.__c(u, s));\n  u && j(o, u, r), C.__r = 0;\n}\nfunction P(n, l, u, t, i, o, r, f, e, a, h) {\n  var v,\n    p,\n    y,\n    d,\n    _,\n    g = t && t.__k || s,\n    b = l.length;\n  for (u.__d = e, S(u, l, g), e = u.__d, v = 0; v < b; v++) null != (y = u.__k[v]) && \"boolean\" != typeof y && \"function\" != typeof y && (p = -1 === y.__i ? c : g[y.__i] || c, y.__i = v, M(n, y, p, i, o, r, f, e, a, h), d = y.__e, y.ref && p.ref != y.ref && (p.ref && N(p.ref, null, y), h.push(y.ref, y.__c || d, y)), null == _ && null != d && (_ = d), 65536 & y.__u || p.__k === y.__k ? e = $(y, e, n) : \"function\" == typeof y.type && void 0 !== y.__d ? e = y.__d : d && (e = d.nextSibling), y.__d = void 0, y.__u &= -196609);\n  u.__d = e, u.__e = _;\n}\nfunction S(n, l, u) {\n  var t,\n    i,\n    o,\n    r,\n    f,\n    e = l.length,\n    c = u.length,\n    s = c,\n    a = 0;\n  for (n.__k = [], t = 0; t < e; t++) r = t + a, null != (i = n.__k[t] = null == (i = l[t]) || \"boolean\" == typeof i || \"function\" == typeof i ? null : \"string\" == typeof i || \"number\" == typeof i || \"bigint\" == typeof i || i.constructor == String ? d(null, i, null, null, null) : h(i) ? d(g, {\n    children: i\n  }, null, null, null) : void 0 === i.constructor && i.__b > 0 ? d(i.type, i.props, i.key, i.ref ? i.ref : null, i.__v) : i) ? (i.__ = n, i.__b = n.__b + 1, f = I(i, u, r, s), i.__i = f, o = null, -1 !== f && (s--, (o = u[f]) && (o.__u |= 131072)), null == o || null === o.__v ? (-1 == f && a--, \"function\" != typeof i.type && (i.__u |= 65536)) : f !== r && (f === r + 1 ? a++ : f > r ? s > e - r ? a += f - r : a-- : f < r ? f == r - 1 && (a = f - r) : a = 0, f !== t + a && (i.__u |= 65536))) : (o = u[r]) && null == o.key && o.__e && 0 == (131072 & o.__u) && (o.__e == n.__d && (n.__d = m(o)), O(o, o, !1), u[r] = null, s--);\n  if (s) for (t = 0; t < c; t++) null != (o = u[t]) && 0 == (131072 & o.__u) && (o.__e == n.__d && (n.__d = m(o)), O(o, o));\n}\nfunction $(n, l, u) {\n  var t, i;\n  if (\"function\" == typeof n.type) {\n    for (t = n.__k, i = 0; t && i < t.length; i++) t[i] && (t[i].__ = n, l = $(t[i], l, u));\n    return l;\n  }\n  n.__e != l && (u.insertBefore(n.__e, l || null), l = n.__e);\n  do {\n    l = l && l.nextSibling;\n  } while (null != l && 8 === l.nodeType);\n  return l;\n}\nfunction H(n, l) {\n  return l = l || [], null == n || \"boolean\" == typeof n || (h(n) ? n.some(function (n) {\n    H(n, l);\n  }) : l.push(n)), l;\n}\nfunction I(n, l, u, t) {\n  var i = n.key,\n    o = n.type,\n    r = u - 1,\n    f = u + 1,\n    e = l[u];\n  if (null === e || e && i == e.key && o === e.type && 0 == (131072 & e.__u)) return u;\n  if (t > (null != e && 0 == (131072 & e.__u) ? 1 : 0)) for (; r >= 0 || f < l.length;) {\n    if (r >= 0) {\n      if ((e = l[r]) && 0 == (131072 & e.__u) && i == e.key && o === e.type) return r;\n      r--;\n    }\n    if (f < l.length) {\n      if ((e = l[f]) && 0 == (131072 & e.__u) && i == e.key && o === e.type) return f;\n      f++;\n    }\n  }\n  return -1;\n}\nfunction T(n, l, u) {\n  \"-\" === l[0] ? n.setProperty(l, null == u ? \"\" : u) : n[l] = null == u ? \"\" : \"number\" != typeof u || a.test(l) ? u : u + \"px\";\n}\nfunction A(n, l, u, t, i) {\n  var o;\n  n: if (\"style\" === l) {\n    if (\"string\" == typeof u) n.style.cssText = u;else {\n      if (\"string\" == typeof t && (n.style.cssText = t = \"\"), t) for (l in t) u && l in u || T(n.style, l, \"\");\n      if (u) for (l in u) t && u[l] === t[l] || T(n.style, l, u[l]);\n    }\n  } else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/(PointerCapture)$|Capture$/i, \"$1\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = u, u ? t ? u.u = t.u : (u.u = Date.now(), n.addEventListener(l, o ? L : D, o)) : n.removeEventListener(l, o ? L : D, o);else {\n    if (i) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");else if (\"width\" !== l && \"height\" !== l && \"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && \"rowSpan\" !== l && \"colSpan\" !== l && \"role\" !== l && l in n) try {\n      n[l] = null == u ? \"\" : u;\n      break n;\n    } catch (n) {}\n    \"function\" == typeof u || (null == u || !1 === u && \"-\" !== l[4] ? n.removeAttribute(l) : n.setAttribute(l, u));\n  }\n}\nfunction D(n) {\n  if (this.l) {\n    var u = this.l[n.type + !1];\n    if (n.t) {\n      if (n.t <= u.u) return;\n    } else n.t = Date.now();\n    return u(l.event ? l.event(n) : n);\n  }\n}\nfunction L(n) {\n  if (this.l) return this.l[n.type + !0](l.event ? l.event(n) : n);\n}\nfunction M(n, u, t, i, o, r, f, e, c, s) {\n  var a,\n    p,\n    y,\n    d,\n    _,\n    m,\n    w,\n    k,\n    x,\n    C,\n    S,\n    $,\n    H,\n    I,\n    T,\n    A = u.type;\n  if (void 0 !== u.constructor) return null;\n  128 & t.__u && (c = !!(32 & t.__u), r = [e = u.__e = t.__e]), (a = l.__b) && a(u);\n  n: if (\"function\" == typeof A) try {\n    if (k = u.props, x = (a = A.contextType) && i[a.__c], C = a ? x ? x.props.value : a.__ : i, t.__c ? w = (p = u.__c = t.__c).__ = p.__E : (\"prototype\" in A && A.prototype.render ? u.__c = p = new A(k, C) : (u.__c = p = new b(k, C), p.constructor = A, p.render = q), x && x.sub(p), p.props = k, p.state || (p.state = {}), p.context = C, p.__n = i, y = p.__d = !0, p.__h = [], p._sb = []), null == p.__s && (p.__s = p.state), null != A.getDerivedStateFromProps && (p.__s == p.state && (p.__s = v({}, p.__s)), v(p.__s, A.getDerivedStateFromProps(k, p.__s))), d = p.props, _ = p.state, p.__v = u, y) null == A.getDerivedStateFromProps && null != p.componentWillMount && p.componentWillMount(), null != p.componentDidMount && p.__h.push(p.componentDidMount);else {\n      if (null == A.getDerivedStateFromProps && k !== d && null != p.componentWillReceiveProps && p.componentWillReceiveProps(k, C), !p.__e && (null != p.shouldComponentUpdate && !1 === p.shouldComponentUpdate(k, p.__s, C) || u.__v === t.__v)) {\n        for (u.__v !== t.__v && (p.props = k, p.state = p.__s, p.__d = !1), u.__e = t.__e, u.__k = t.__k, u.__k.forEach(function (n) {\n          n && (n.__ = u);\n        }), S = 0; S < p._sb.length; S++) p.__h.push(p._sb[S]);\n        p._sb = [], p.__h.length && f.push(p);\n        break n;\n      }\n      null != p.componentWillUpdate && p.componentWillUpdate(k, p.__s, C), null != p.componentDidUpdate && p.__h.push(function () {\n        p.componentDidUpdate(d, _, m);\n      });\n    }\n    if (p.context = C, p.props = k, p.__P = n, p.__e = !1, $ = l.__r, H = 0, \"prototype\" in A && A.prototype.render) {\n      for (p.state = p.__s, p.__d = !1, $ && $(u), a = p.render(p.props, p.state, p.context), I = 0; I < p._sb.length; I++) p.__h.push(p._sb[I]);\n      p._sb = [];\n    } else do {\n      p.__d = !1, $ && $(u), a = p.render(p.props, p.state, p.context), p.state = p.__s;\n    } while (p.__d && ++H < 25);\n    p.state = p.__s, null != p.getChildContext && (i = v(v({}, i), p.getChildContext())), y || null == p.getSnapshotBeforeUpdate || (m = p.getSnapshotBeforeUpdate(d, _)), P(n, h(T = null != a && a.type === g && null == a.key ? a.props.children : a) ? T : [T], u, t, i, o, r, f, e, c, s), p.base = u.__e, u.__u &= -161, p.__h.length && f.push(p), w && (p.__E = p.__ = null);\n  } catch (n) {\n    u.__v = null, c || null != r ? (u.__e = e, u.__u |= c ? 160 : 32, r[r.indexOf(e)] = null) : (u.__e = t.__e, u.__k = t.__k), l.__e(n, u, t);\n  } else null == r && u.__v === t.__v ? (u.__k = t.__k, u.__e = t.__e) : u.__e = z(t.__e, u, t, i, o, r, f, c, s);\n  (a = l.diffed) && a(u);\n}\nfunction j(n, u, t) {\n  for (var i = 0; i < t.length; i++) N(t[i], t[++i], t[++i]);\n  l.__c && l.__c(u, n), n.some(function (u) {\n    try {\n      n = u.__h, u.__h = [], n.some(function (n) {\n        n.call(u);\n      });\n    } catch (n) {\n      l.__e(n, u.__v);\n    }\n  });\n}\nfunction z(l, u, t, i, o, r, f, e, s) {\n  var a,\n    v,\n    y,\n    d,\n    _,\n    g,\n    b,\n    w = t.props,\n    k = u.props,\n    x = u.type;\n  if (\"svg\" === x && (o = !0), null != r) for (a = 0; a < r.length; a++) if ((_ = r[a]) && \"setAttribute\" in _ == !!x && (x ? _.localName === x : 3 === _.nodeType)) {\n    l = _, r[a] = null;\n    break;\n  }\n  if (null == l) {\n    if (null === x) return document.createTextNode(k);\n    l = o ? document.createElementNS(\"http://www.w3.org/2000/svg\", x) : document.createElement(x, k.is && k), r = null, e = !1;\n  }\n  if (null === x) w === k || e && l.data === k || (l.data = k);else {\n    if (r = r && n.call(l.childNodes), w = t.props || c, !e && null != r) for (w = {}, a = 0; a < l.attributes.length; a++) w[(_ = l.attributes[a]).name] = _.value;\n    for (a in w) _ = w[a], \"children\" == a || (\"dangerouslySetInnerHTML\" == a ? y = _ : \"key\" === a || a in k || A(l, a, null, _, o));\n    for (a in k) _ = k[a], \"children\" == a ? d = _ : \"dangerouslySetInnerHTML\" == a ? v = _ : \"value\" == a ? g = _ : \"checked\" == a ? b = _ : \"key\" === a || e && \"function\" != typeof _ || w[a] === _ || A(l, a, _, w[a], o);\n    if (v) e || y && (v.__html === y.__html || v.__html === l.innerHTML) || (l.innerHTML = v.__html), u.__k = [];else if (y && (l.innerHTML = \"\"), P(l, h(d) ? d : [d], u, t, i, o && \"foreignObject\" !== x, r, f, r ? r[0] : t.__k && m(t, 0), e, s), null != r) for (a = r.length; a--;) null != r[a] && p(r[a]);\n    e || (a = \"value\", void 0 !== g && (g !== l[a] || \"progress\" === x && !g || \"option\" === x && g !== w[a]) && A(l, a, g, w[a], !1), a = \"checked\", void 0 !== b && b !== l[a] && A(l, a, b, w[a], !1));\n  }\n  return l;\n}\nfunction N(n, u, t) {\n  try {\n    \"function\" == typeof n ? n(u) : n.current = u;\n  } catch (n) {\n    l.__e(n, t);\n  }\n}\nfunction O(n, u, t) {\n  var i, o;\n  if (l.unmount && l.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || N(i, null, u)), null != (i = n.__c)) {\n    if (i.componentWillUnmount) try {\n      i.componentWillUnmount();\n    } catch (n) {\n      l.__e(n, u);\n    }\n    i.base = i.__P = null, n.__c = void 0;\n  }\n  if (i = n.__k) for (o = 0; o < i.length; o++) i[o] && O(i[o], u, t || \"function\" != typeof n.type);\n  t || null == n.__e || p(n.__e), n.__ = n.__e = n.__d = void 0;\n}\nfunction q(n, l, u) {\n  return this.constructor(n, u);\n}\nfunction B(u, t, i) {\n  var o, r, f, e;\n  l.__ && l.__(u, t), r = (o = \"function\" == typeof i) ? null : i && i.__k || t.__k, f = [], e = [], M(t, u = (!o && i || t).__k = y(g, null, [u]), r || c, c, void 0 !== t.ownerSVGElement, !o && i ? [i] : r ? null : t.firstChild ? n.call(t.childNodes) : null, f, !o && i ? i : r ? r.__e : t.firstChild, o, e), u.__d = void 0, j(f, u, e);\n}\nfunction E(n, l) {\n  B(n, l, E);\n}\nfunction F(l, u, t) {\n  var i,\n    o,\n    r,\n    f,\n    e = v({}, l.props);\n  for (r in l.type && l.type.defaultProps && (f = l.type.defaultProps), u) \"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : e[r] = void 0 === u[r] && void 0 !== f ? f[r] : u[r];\n  return arguments.length > 2 && (e.children = arguments.length > 3 ? n.call(arguments, 2) : t), d(l.type, e, i || l.key, o || l.ref, null);\n}\nfunction G(n, l) {\n  var u = {\n    __c: l = \"__cC\" + e++,\n    __: n,\n    Consumer: function (n, l) {\n      return n.children(l);\n    },\n    Provider: function (n) {\n      var u, t;\n      return this.getChildContext || (u = [], (t = {})[l] = this, this.getChildContext = function () {\n        return t;\n      }, this.shouldComponentUpdate = function (n) {\n        this.props.value !== n.value && u.some(function (n) {\n          n.__e = !0, x(n);\n        });\n      }, this.sub = function (n) {\n        u.push(n);\n        var l = n.componentWillUnmount;\n        n.componentWillUnmount = function () {\n          u.splice(u.indexOf(n), 1), l && l.call(n);\n        };\n      }), n.children;\n    }\n  };\n  return u.Provider.__ = u.Consumer.contextType = u;\n}\nn = s.slice, l = {\n  __e: function (n, l, u, t) {\n    for (var i, o, r; l = l.__;) if ((i = l.__c) && !i.__) try {\n      if ((o = i.constructor) && null != o.getDerivedStateFromError && (i.setState(o.getDerivedStateFromError(n)), r = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), r = i.__d), r) return i.__E = i;\n    } catch (l) {\n      n = l;\n    }\n    throw n;\n  }\n}, u = 0, t = function (n) {\n  return null != n && null == n.constructor;\n}, b.prototype.setState = function (n, l) {\n  var u;\n  u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = v({}, this.state), \"function\" == typeof n && (n = n(v({}, u), this.props)), n && v(u, n), null != n && this.__v && (l && this._sb.push(l), x(this));\n}, b.prototype.forceUpdate = function (n) {\n  this.__v && (this.__e = !0, n && this.__h.push(n), x(this));\n}, b.prototype.render = g, i = [], r = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f = function (n, l) {\n  return n.__v.__b - l.__v.__b;\n}, C.__r = 0, e = 0;\nexport { b as Component, g as Fragment, F as cloneElement, G as createContext, y as createElement, _ as createRef, y as h, E as hydrate, t as isValidElement, l as options, B as render, H as toChildArray };","map":{"version":3,"names":["n","l","u","t","i","o","r","f","e","c","s","a","h","Array","isArray","v","p","parentNode","removeChild","y","arguments","length","children","call","defaultProps","d","type","props","key","ref","__k","__","__b","__e","__d","__c","constructor","__v","__i","__u","vnode","_","current","g","b","context","m","w","__P","M","__n","ownerSVGElement","k","base","x","push","C","__r","debounceRendering","sort","shift","j","P","S","N","$","nextSibling","String","I","O","insertBefore","nodeType","H","some","T","setProperty","test","A","style","cssText","replace","toLowerCase","slice","Date","now","addEventListener","L","D","removeEventListener","removeAttribute","setAttribute","event","contextType","value","__E","prototype","render","q","sub","state","__h","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","indexOf","z","diffed","localName","document","createTextNode","createElementNS","createElement","is","data","childNodes","attributes","name","__html","innerHTML","unmount","componentWillUnmount","B","firstChild","E","F","G","Consumer","Provider","splice","getDerivedStateFromError","setState","componentDidCatch","isValidElement","forceUpdate","Promise","then","bind","resolve","setTimeout","depthSort","Component","Fragment","cloneElement","createContext","createRef","hydrate","options","toChildArray"],"sources":["/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/constants.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/util.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/options.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/create-element.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/component.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/create-context.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/diff/children.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/diff/props.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/diff/index.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/render.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/clone-element.js","/Users/Shivaji/Workspace/Play/cta/node_modules/preact/src/diff/catch-error.js"],"sourcesContent":["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { EMPTY_ARR, MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component, commitQueue, refQueue) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\n\t\tnewVNode._nextDom = undefined;\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\n\t\treturn newVNode;\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\tlet commitQueue = [];\n\tlet refQueue = [];\n\tlet root;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\troot = renderComponent(c, commitQueue, refQueue) || root;\n\t\t\t// If this WAS the last component in the queue, run commit callbacks *before* we exit the tight loop.\n\t\t\t// This is required in order for `componentDidMount(){this.setState()}` to be batched into one flush.\n\t\t\t// Otherwise, also run commit callbacks if the render queue was mutated.\n\t\t\tif (renderQueueLength === 0 || rerenderQueue.length > renderQueueLength) {\n\t\t\t\tcommitRoot(commitQueue, root, refQueue);\n\t\t\t\trefQueue.length = commitQueue.length = 0;\n\t\t\t\troot = undefined;\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t} else if (root) {\n\t\t\t\tif (options._commit) options._commit(root, EMPTY_ARR);\n\t\t\t}\n\t\t}\n\t}\n\tif (root) commitRoot(commitQueue, root, refQueue);\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\n\t\t// Handle unmounting null placeholders, i.e. VNode => null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[skewedIndex];\n\t\t\tif (\n\t\t\t\toldVNode &&\n\t\t\t\toldVNode.key == null &&\n\t\t\t\toldVNode._dom &&\n\t\t\t\t(oldVNode._flags & MATCHED) === 0\n\t\t\t) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[skewedIndex] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex === skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex > skewedIndex) {\n\t\t\t\tif (remainingOldChildren > newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex < skewedIndex) {\n\t\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\t\tskew = matchingIndex - skewedIndex;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tskew = 0;\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != null && oldDom.nodeType === 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) === 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/i, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = Date.now();\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname !== 'rowSpan' &&\n\t\t\tname !== 'colSpan' &&\n\t\t\tname !== 'role' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {PreactEvent} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tif (this._listeners) {\n\t\tconst eventHandler = this._listeners[e.type + false];\n\t\t/**\n\t\t * This trick is inspired by Vue https://github.com/vuejs/core/blob/main/packages/runtime-dom/src/modules/events.ts#L90-L101\n\t\t * when the dom performs an event it leaves micro-ticks in between bubbling up which means that an event can trigger on a newly\n\t\t * created DOM-node while the event bubbles up, this can cause quirky behavior as seen in https://github.com/preactjs/preact/issues/3927\n\t\t */\n\t\tif (!e._dispatched) {\n\t\t\t// When an event has no _dispatched we know this is the first event-target in the chain\n\t\t\t// so we set the initial dispatched time.\n\t\t\te._dispatched = Date.now();\n\t\t\t// When the _dispatched is smaller than the time when the targetted event handler was attached\n\t\t\t// we know we have bubbled up to an element that was added during patching the dom.\n\t\t} else if (e._dispatched <= eventHandler._attached) {\n\t\t\treturn;\n\t\t}\n\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {PreactEvent} e The event object from the browser\n * @private\n */\nfunction eventProxyCapture(e) {\n\tif (this._listeners) {\n\t\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n\t}\n}\n","import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t// ^ could possibly be simplified to:\n\t\t\t\t// excessDomChildren.length = 0;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value === !!nodeType &&\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS('http://www.w3.org/2000/svg', nodeType);\n\t\t} else {\n\t\t\tdom = document.createElement(nodeType, newProps.is && newProps);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\n\t\t\t\tsetProperty(dom, i, null, value, isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' &&\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], false);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any>} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\tvnode._nextDom = undefined;\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n"],"mappings":"AACa,IC2BAA,CAAA;ECjBPC,CAAA;ECRFC,CAAA;EAgGSC,CAAA;ECiFTC,CAAA;EAWAC,CAAA;EAEEC,CAAA;EA0BAC,CAAA;ECzNKC,CAAA;ELUEC,CAAA,GAAgC;EAChCC,CAAA,GAAY;EACZC,CAAA,GACZ;ECbYC,CAAA,GAAUC,KAAA,CAAMC,OAAA;AAStB,SAASC,EAAOf,CAAA,EAAKC,CAAA;EAE3B,KAAK,IAAIC,CAAA,IAAKD,CAAA,EAAOD,CAAA,CAAIE,CAAA,IAAKD,CAAA,CAAMC,CAAA;EACpC,OAA6BF,CAC7B;AAAA;AAAA,SAQegB,EAAWhB,CAAA;EAC1B,IAAIC,CAAA,GAAaD,CAAA,CAAKiB,UAAA;EAClBhB,CAAA,IAAYA,CAAA,CAAWiB,WAAA,CAAYlB,CAAA,CACvC;AAAA;AEZM,SAASmB,EAAclB,CAAA,EAAMC,CAAA,EAAOC,CAAA;EAC1C,IACCC,CAAA;IACAC,CAAA;IACAC,CAAA;IAHGC,CAAA,GAAkB;EAItB,KAAKD,CAAA,IAAKJ,CAAA,EACA,SAALI,CAAA,GAAYF,CAAA,GAAMF,CAAA,CAAMI,CAAA,IACd,SAALA,CAAA,GAAYD,CAAA,GAAMH,CAAA,CAAMI,CAAA,IAC5BC,CAAA,CAAgBD,CAAA,IAAKJ,CAAA,CAAMI,CAAA;EAUjC,IAPIc,SAAA,CAAUC,MAAA,GAAS,MACtBd,CAAA,CAAgBe,QAAA,GACfF,SAAA,CAAUC,MAAA,GAAS,IAAIrB,CAAA,CAAMuB,IAAA,CAAKH,SAAA,EAAW,KAAKjB,CAAA,GAKjC,qBAARF,CAAA,IAA2C,QAArBA,CAAA,CAAKuB,YAAA,EACrC,KAAKlB,CAAA,IAAKL,CAAA,CAAKuB,YAAA,OACa,MAAvBjB,CAAA,CAAgBD,CAAA,MACnBC,CAAA,CAAgBD,CAAA,IAAKL,CAAA,CAAKuB,YAAA,CAAalB,CAAA;EAK1C,OAAOmB,CAAA,CAAYxB,CAAA,EAAMM,CAAA,EAAiBH,CAAA,EAAKC,CAAA,EAAK,KACpD;AAAA;AAce,SAAAoB,EAAYzB,CAAA,EAAMG,CAAA,EAAOC,CAAA,EAAKC,CAAA,EAAKC,CAAA;EAIlD,IAAMC,CAAA,GAAQ;IACbmB,IAAA,EAAA1B,CAAA;IACA2B,KAAA,EAAAxB,CAAA;IACAyB,GAAA,EAAAxB,CAAA;IACAyB,GAAA,EAAAxB,CAAA;IACAyB,GAAA,EAAW;IACXC,EAAA,EAAS;IACTC,GAAA,EAAQ;IACRC,GAAA,EAAM;IAKNC,GAAA,OAAU;IACVC,GAAA,EAAY;IACZC,WAAA,OAAa;IACbC,GAAA,EAAuB,QAAZ/B,CAAA,KAAqBJ,CAAA,GAAUI,CAAA;IAC1CgC,GAAA,GAAS;IACTC,GAAA,EAAQ;EAAA;EAMT,OAFgB,QAAZjC,CAAA,IAAqC,QAAjBL,CAAA,CAAQuC,KAAA,IAAevC,CAAA,CAAQuC,KAAA,CAAMjC,CAAA,GAEtDA,CACP;AAAA;AAAA,SAEekC,EAAA;EACf,OAAO;IAAEC,OAAA,EAAS;EAAA,CAClB;AAAA;AAEe,SAAAC,EAAS3C,CAAA;EACxB,OAAOA,CAAA,CAAMsB,QACb;AAAA;AC/EM,SAASsB,EAAc5C,CAAA,EAAOC,CAAA;EACpC,KAAK0B,KAAA,GAAQ3B,CAAA,EACb,KAAK6C,OAAA,GAAU5C,CACf;AAAA;AA0EM,SAAS6C,EAAc9C,CAAA,EAAOC,CAAA;EACpC,IAAkB,QAAdA,CAAA,EAEH,OAAOD,CAAA,CAAK+B,EAAA,GACTe,CAAA,CAAc9C,CAAA,CAAe+B,EAAA,EAAA/B,CAAA,CAAAsC,GAAA,GAAe,KAC5C;EAIJ,KADA,IAAIpC,CAAA,EACGD,CAAA,GAAaD,CAAA,CAAA8B,GAAA,CAAgBT,MAAA,EAAQpB,CAAA,IAG3C,IAAe,SAFfC,CAAA,GAAUF,CAAA,CAAK8B,GAAA,CAAW7B,CAAA,MAEa,QAAhBC,CAAA,CAAA+B,GAAA,EAItB,OAAO/B,CAAA,CAAA+B,GAAA;EAST,OAA4B,qBAAdjC,CAAA,CAAM0B,IAAA,GAAqBoB,CAAA,CAAc9C,CAAA,IAAS,IAChE;AAAA;AAMD,SAAS+C,EAAgB/C,CAAA,EAAWE,CAAA,EAAaC,CAAA;EAAjD,IAMQC,CAAA;IALHC,CAAA,GAAWL,CAAA,CAAfqC,GAAA;IACC/B,CAAA,GAASD,CAAA,CAAA4B,GAAA;IACT1B,CAAA,GAAYP,CAAA,CAAHgD,GAAA;EAEV,IAAIzC,CAAA,EA2BH,QA1BMH,CAAA,GAAWW,CAAA,CAAO,CAAD,GAAKV,CAAA,GACpBgC,GAAA,GAAahC,CAAA,CAAQgC,GAAA,GAAa,GACtCpC,CAAA,CAAQuC,KAAA,IAAOvC,CAAA,CAAQuC,KAAA,CAAMpC,CAAA,GAEjC6C,CAAA,CACC1C,CAAA,EACAH,CAAA,EACAC,CAAA,EACAL,CAAA,CACAkD,GAAA,OAA8B,MAA9B3C,CAAA,CAAU4C,eAAA,EJxIe,KIyIzB9C,CAAA,CAAAkC,GAAA,GAAiC,CAACjC,CAAA,IAAU,MAC5CJ,CAAA,EACU,QAAVI,CAAA,GAAiBwC,CAAA,CAAczC,CAAA,IAAYC,CAAA,KJ3IlB,KI4ItBD,CAAA,CAAAkC,GAAA,GACHpC,CAAA,GAGDC,CAAA,CAAAiC,GAAA,GAAqBhC,CAAA,CACrBgC,GAAA,EAAAjC,CAAA,CAAA2B,EAAA,CAA2BD,GAAA,CAAA1B,CAAA,CAAAkC,GAAA,IAAmBlC,CAAA,EAE9CA,CAAA,CAAA8B,GAAA,QAAoB,GAEhB9B,CAAA,CAAA6B,GAAA,IAAiB3B,CAAA,IACpB8C,CAAA,CAAwBhD,CAAA,GAGlBA,CAER;AAAA;AAKD,SAASgD,EAAwBpD,CAAA;EAAjC,IAGWC,CAAA,EACJC,CAAA;EAHN,IAA+B,SAA1BF,CAAA,GAAQA,CAAA,CAAT+B,EAAA,KAAuD,QAApB/B,CAAA,CAAAmC,GAAA,EAA0B;IAEhE,KADAnC,CAAA,CAAAiC,GAAA,GAAajC,CAAA,CAAAmC,GAAA,CAAiBkB,IAAA,GAAO,MAC5BpD,CAAA,GAAI,GAAGA,CAAA,GAAID,CAAA,CAAA8B,GAAA,CAAgBT,MAAA,EAAQpB,CAAA,IAE3C,IAAa,SADTC,CAAA,GAAQF,CAAA,CAAA8B,GAAA,CAAgB7B,CAAA,MACO,QAAdC,CAAA,CAAA+B,GAAA,EAAoB;MACxCjC,CAAA,CAAAiC,GAAA,GAAajC,CAAA,CAAAmC,GAAA,CAAiBkB,IAAA,GAAOnD,CAAA,CAAxB+B,GAAA;MACb;IACA;IAGF,OAAOmB,CAAA,CAAwBpD,CAAA,CAC/B;EAAA;AACD;AAAA,SA4BesD,EAActD,CAAA;EAAA,EAE1BA,CAAA,CACAkC,GAAA,KAAAlC,CAAA,CAAAkC,GAAA,IAAW,MACZ9B,CAAA,CAAcmD,IAAA,CAAKvD,CAAA,MAClBwD,CAAA,CAAAC,GAAA,MACFpD,CAAA,KAAiBJ,CAAA,CAAQyD,iBAAA,OAEzBrD,CAAA,GAAeJ,CAAA,CAAQyD,iBAAA,KACNpD,CAAA,EAAOkD,CAAA,CAEzB;AAAA;AASD,SAASA,EAAA;EAAT,IACKxD,CAAA;IAGAE,CAAA;IAMEC,CAAA;IARFE,CAAA,GAAc;IACdC,CAAA,GAAW;EAKf,KAHAF,CAAA,CAAcuD,IAAA,CAAKpD,CAAA,GAGXP,CAAA,GAAII,CAAA,CAAcwD,KAAA,KACrB5D,CAAA,CAAAkC,GAAA,KACC/B,CAAA,GAAoBC,CAAA,CAAciB,MAAA,EACtCnB,CAAA,GAAO6C,CAAA,CAAgB/C,CAAA,EAAGK,CAAA,EAAaC,CAAA,KAAaJ,CAAA,EAI1B,MAAtBC,CAAA,IAA2BC,CAAA,CAAciB,MAAA,GAASlB,CAAA,IACrD0D,CAAA,CAAWxD,CAAA,EAAaH,CAAA,EAAMI,CAAA,GAC9BA,CAAA,CAASe,MAAA,GAAShB,CAAA,CAAYgB,MAAA,GAAS,GACvCnB,CAAA,QAAO,GAIPE,CAAA,CAAcuD,IAAA,CAAKpD,CAAA,KACTL,CAAA,IACND,CAAA,CAAiBkC,GAAA,IAAAlC,CAAA,CAAAkC,GAAA,CAAgBjC,CAAA,EAAMQ,CAAA;EAI1CR,CAAA,IAAM2D,CAAA,CAAWxD,CAAA,EAAaH,CAAA,EAAMI,CAAA,GACxCkD,CAAA,CAAAC,GAAA,GAAyB,CACzB;AAAA;AAAA,SEhOeK,EACf9D,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAG,CAAA,EACAC,CAAA;EAAA,IAEIG,CAAA;IAEHC,CAAA;IAEAG,CAAA;IAEAM,CAAA;IAEAgB,CAAA;IAKGE,CAAA,GAAexC,CAAA,IAAkBA,CAAA,CAAJ2B,GAAA,IAAiCpB,CAAA;IAE9DkC,CAAA,GAAoB3C,CAAA,CAAaoB,MAAA;EAMrC,KAJAnB,CAAA,CAAcgC,GAAA,GAAY1B,CAAA,EAC1BuD,CAAA,CAA0B7D,CAAA,EAAgBD,CAAA,EAAc0C,CAAA,GACxDnC,CAAA,GAASN,CAAA,CAAHgC,GAAA,EAEDnB,CAAA,GAAI,GAAGA,CAAA,GAAI6B,CAAA,EAAmB7B,CAAA,IAGnB,SAFfI,CAAA,GAAajB,CAAA,CAAc4B,GAAA,CAAWf,CAAA,MAGhB,oBAAdI,CAAA,IACc,qBAAdA,CAAA,KAQPH,CAAA,IAD0B,MAAvBG,CAAA,CAAAmB,GAAA,GACQ7B,CAAA,GAEAkC,CAAA,CAAYxB,CAAA,CAAZmB,GAAA,KAAkC7B,CAAA,EAI9CU,CAAA,CAAAmB,GAAA,GAAoBvB,CAAA,EAGpBkC,CAAA,CACCjD,CAAA,EACAmB,CAAA,EACAH,CAAA,EACAZ,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAG,CAAA,EACAC,CAAA,GAIDa,CAAA,GAASN,CAAA,CAAHc,GAAA,EACFd,CAAA,CAAWU,GAAA,IAAOb,CAAA,CAASa,GAAA,IAAOV,CAAA,CAAWU,GAAA,KAC5Cb,CAAA,CAASa,GAAA,IACZmC,CAAA,CAAShD,CAAA,CAASa,GAAA,EAAK,MAAMV,CAAA,GAE9BP,CAAA,CAAS2C,IAAA,CACRpC,CAAA,CAAWU,GAAA,EACXV,CAAA,CAAUgB,GAAA,IAAeV,CAAA,EACzBN,CAAA,IAImB,QAAjBsB,CAAA,IAAmC,QAAVhB,CAAA,KAC5BgB,CAAA,GAAgBhB,CAAA,GN1GS,QM8GzBN,CAAA,CAAAoB,GAAA,IACAvB,CAAA,CAAAc,GAAA,KAAuBX,CAAA,CAAvBW,GAAA,GAEAtB,CAAA,GAASyD,CAAA,CAAO9C,CAAA,EAAYX,CAAA,EAAQR,CAAA,IAEV,qBAAnBmB,CAAA,CAAWO,IAAA,SACM,MAAxBP,CAAA,CAAAe,GAAA,GAKA1B,CAAA,GAASW,CAAA,CAAAe,GAAA,GACCT,CAAA,KACVjB,CAAA,GAASiB,CAAA,CAAOyC,WAAA,GAQjB/C,CAAA,CAAAe,GAAA,QAAsB,GAGtBf,CAAA,CAAAoB,GAAA,KAAqB;EAatBrC,CAAA,CAAcgC,GAAA,GAAY1B,CAAA,EAC1BN,CAAA,CAAc+B,GAAA,GAAQQ,CACtB;AAAA;AAOD,SAASsB,EAA0B/D,CAAA,EAAgBC,CAAA,EAAcC,CAAA;EAAjE,IAEKC,CAAA;IAEAC,CAAA;IAEAC,CAAA;IA8DGC,CAAA;IAkCAC,CAAA;IA9FDC,CAAA,GAAoBP,CAAA,CAAaoB,MAAA;IACnCZ,CAAA,GAAoBP,CAAA,CAAYmB,MAAA;IACnCX,CAAA,GAAuBD,CAAA;IAEpBE,CAAA,GAAO;EAGX,KADAX,CAAA,CAAA8B,GAAA,GAA2B,IACtB3B,CAAA,GAAI,GAAGA,CAAA,GAAIK,CAAA,EAAmBL,CAAA,IAqD5BG,CAAA,GAAcH,CAAA,GAAIQ,CAAA,EAGN,SA9CjBP,CAAA,GAAaJ,CAAA,CAAA8B,GAAA,CAAyB3B,CAAA,IAJxB,SAHfC,CAAA,GAAaH,CAAA,CAAaE,CAAA,MAIJ,oBAAdC,CAAA,IACc,qBAAdA,CAAA,GAEoC,OAMtB,mBAAdA,CAAA,IACc,mBAAdA,CAAA,IAEc,mBAAdA,CAAA,IACPA,CAAA,CAAWgC,WAAA,IAAe+B,MAAA,GAEiB1C,CAAA,CAC1C,MACArB,CAAA,EACA,MACA,MACA,QAESQ,CAAA,CAAQR,CAAA,IACyBqB,CAAA,CAC1CkB,CAAA,EACA;IAAErB,QAAA,EAAUlB;EAAA,GACZ,MACA,MACA,aAEoC,MAA3BA,CAAA,CAAWgC,WAAA,IAA6BhC,CAAA,CAAA4B,GAAA,GAAoB,IAK3BP,CAAA,CAC1CrB,CAAA,CAAWsB,IAAA,EACXtB,CAAA,CAAWuB,KAAA,EACXvB,CAAA,CAAWwB,GAAA,EACXxB,CAAA,CAAWyB,GAAA,GAAMzB,CAAA,CAAWyB,GAAA,GAAM,MAClCzB,CAAA,CAEDiC,GAAA,IAC2CjC,CAAA,KAkC5CA,CAAA,CAAU2B,EAAA,GAAW/B,CAAA,EACrBI,CAAA,CAAU4B,GAAA,GAAUhC,CAAA,CAAAgC,GAAA,GAAwB,GAEtCzB,CAAA,GAAgB6D,CAAA,CACrBhE,CAAA,EACAF,CAAA,EACAI,CAAA,EACAI,CAAA,GAMDN,CAAA,CAAUkC,GAAA,GAAU/B,CAAA,EAEpBF,CAAA,GAAW,OACY,MAAnBE,CAAA,KAEHG,CAAA,KADAL,CAAA,GAAWH,CAAA,CAAYK,CAAA,OAGtBF,CAAA,CAAQkC,GAAA,INjRW,UMwRU,QAAZlC,CAAA,IAA2C,SAAvBA,CAAA,CAAAgC,GAAA,KAGhB,KAAlB9B,CAAA,IACHI,CAAA,IAI6B,qBAAnBP,CAAA,CAAWsB,IAAA,KACrBtB,CAAA,CAAAmC,GAAA,INnSwB,UMqSfhC,CAAA,KAAkBD,CAAA,KACxBC,CAAA,KAAkBD,CAAA,GAAc,IACnCK,CAAA,KACUJ,CAAA,GAAgBD,CAAA,GACtBI,CAAA,GAAuBF,CAAA,GAAoBF,CAAA,GAC9CK,CAAA,IAAQJ,CAAA,GAAgBD,CAAA,GAExBK,CAAA,KAESJ,CAAA,GAAgBD,CAAA,GACtBC,CAAA,IAAiBD,CAAA,GAAc,MAClCK,CAAA,GAAOJ,CAAA,GAAgBD,CAAA,IAGxBK,CAAA,GAAO,GAKJJ,CAAA,KAAkBJ,CAAA,GAAIQ,CAAA,KACzBP,CAAA,CAAAmC,GAAA,INzTwB,YMoOzBlC,CAAA,GAAWH,CAAA,CAAYI,CAAA,MAGN,QAAhBD,CAAA,CAASuB,GAAA,IACTvB,CAAA,CAAA4B,GAAA,IACgC,MNvOb,SMuOlB5B,CAAA,CAAAkC,GAAA,MAEGlC,CAAA,CAAQ4B,GAAA,IAASjC,CAAA,CAAjBkC,GAAA,KACHlC,CAAA,CAAAkC,GAAA,GAA0BY,CAAA,CAAczC,CAAA,IAEzCgE,CAAA,CAAQhE,CAAA,EAAUA,CAAA,GAAU,IAW5BH,CAAA,CAAYI,CAAA,IAAe,MAC3BI,CAAA;EAwEH,IAAIA,CAAA,EACH,KAAKP,CAAA,GAAI,GAAGA,CAAA,GAAIM,CAAA,EAAmBN,CAAA,IAElB,SADhBE,CAAA,GAAWH,CAAA,CAAYC,CAAA,MACiC,MNnUpC,SMmUKE,CAAA,CAAAkC,GAAA,MACpBlC,CAAA,CAAQ4B,GAAA,IAASjC,CAAA,CAAjBkC,GAAA,KACHlC,CAAA,CAAAkC,GAAA,GAA0BY,CAAA,CAAczC,CAAA,IAGzCgE,CAAA,CAAQhE,CAAA,EAAUA,CAAA,EAIrB;AAAA;AAQD,SAAS4D,EAAOjE,CAAA,EAAaC,CAAA,EAAQC,CAAA;EAArC,IAIMC,CAAA,EACKC,CAAA;EAFV,IAA+B,qBAApBJ,CAAA,CAAY0B,IAAA,EAAoB;IAE1C,KADIvB,CAAA,GAAWH,CAAA,CAAH8B,GAAA,EACH1B,CAAA,GAAI,GAAGD,CAAA,IAAYC,CAAA,GAAID,CAAA,CAASkB,MAAA,EAAQjB,CAAA,IAC5CD,CAAA,CAASC,CAAA,MAKZD,CAAA,CAASC,CAAA,EAAT2B,EAAA,GAAsB/B,CAAA,EACtBC,CAAA,GAASgE,CAAA,CAAO9D,CAAA,CAASC,CAAA,GAAIH,CAAA,EAAQC,CAAA;IAIvC,OAAOD,CACP;EAAA;EAAUD,CAAA,CAAAiC,GAAA,IAAoBhC,CAAA,KAC9BC,CAAA,CAAUoE,YAAA,CAAatE,CAAA,CAAkBiC,GAAA,EAAAhC,CAAA,IAAU,OACnDA,CAAA,GAASD,CAAA,CACTiC,GAAA;EAED;IACChC,CAAA,GAASA,CAAA,IAAUA,CAAA,CAAOiE,WAAA;EAAA,SACR,QAAVjE,CAAA,IAAsC,MAApBA,CAAA,CAAOsE,QAAA;EAElC,OAAOtE,CACP;AAAA;AAAA,SAQeuE,EAAaxE,CAAA,EAAUC,CAAA;EAUtC,OATAA,CAAA,GAAMA,CAAA,IAAO,IACG,QAAZD,CAAA,IAAuC,oBAAZA,CAAA,KACpBY,CAAA,CAAQZ,CAAA,IAClBA,CAAA,CAASyE,IAAA,CAAK,UAAAzE,CAAA;IACbwE,CAAA,CAAaxE,CAAA,EAAOC,CAAA,CACpB;EAAA,KAEDA,CAAA,CAAIsD,IAAA,CAAKvD,CAAA,IAEHC,CACP;AAAA;AASD,SAASmE,EACRpE,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA;EAJD,IAMOC,CAAA,GAAMJ,CAAA,CAAW4B,GAAA;IACjBvB,CAAA,GAAOL,CAAA,CAAW0B,IAAA;IACpBpB,CAAA,GAAIJ,CAAA,GAAc;IAClBK,CAAA,GAAIL,CAAA,GAAc;IAClBM,CAAA,GAAWP,CAAA,CAAYC,CAAA;EAc3B,IACc,SAAbM,CAAA,IACCA,CAAA,IACAJ,CAAA,IAAOI,CAAA,CAASoB,GAAA,IAChBvB,CAAA,KAASG,CAAA,CAASkB,IAAA,IACc,MNxaZ,SMwanBlB,CAAA,CAAA+B,GAAA,GAEF,OAAOrC,CAAA;EAAA,IAVPC,CAAA,IACa,QAAZK,CAAA,IAAoD,MNjahC,SMiaCA,CAAA,CAAA+B,GAAA,IAAmC,IAAI,IAW7D,OAAOjC,CAAA,IAAK,KAAKC,CAAA,GAAIN,CAAA,CAAYoB,MAAA,GAAQ;IACxC,IAAIf,CAAA,IAAK,GAAG;MAEX,KADAE,CAAA,GAAWP,CAAA,CAAYK,CAAA,MAGU,MNjbd,SMibjBE,CAAA,CAAA+B,GAAA,KACDnC,CAAA,IAAOI,CAAA,CAASoB,GAAA,IAChBvB,CAAA,KAASG,CAAA,CAASkB,IAAA,EAElB,OAAOpB,CAAA;MAERA,CAAA,EACA;IAAA;IAED,IAAIC,CAAA,GAAIN,CAAA,CAAYoB,MAAA,EAAQ;MAE3B,KADAb,CAAA,GAAWP,CAAA,CAAYM,CAAA,MAGU,MN9bd,SM8bjBC,CAAA,CAAQ+B,GAAA,KACTnC,CAAA,IAAOI,CAAA,CAASoB,GAAA,IAChBvB,CAAA,KAASG,CAAA,CAASkB,IAAA,EAElB,OAAOnB,CAAA;MAERA,CAAA,EACA;IAAA;EACD;EAGF,QAAQ,CACR;AAAA;AC9cD,SAASmE,EAAS1E,CAAA,EAAOC,CAAA,EAAKC,CAAA;EACd,QAAXD,CAAA,CAAI,KACPD,CAAA,CAAM2E,WAAA,CAAY1E,CAAA,EAAc,QAATC,CAAA,GAAgB,KAAKA,CAAA,IAE5CF,CAAA,CAAMC,CAAA,IADa,QAATC,CAAA,GACG,KACa,mBAATA,CAAA,IAAqBS,CAAA,CAAmBiE,IAAA,CAAK3E,CAAA,IACjDC,CAAA,GAEAA,CAAA,GAAQ,IAEtB;AAAA;AAAA,SAUe2E,EAAY7E,CAAA,EAAKC,CAAA,EAAMC,CAAA,EAAOC,CAAA,EAAUC,CAAA;EAAA,IACnDC,CAAA;EAEJL,CAAA,EAAG,IAAa,YAATC,CAAA;IACN,IAAoB,mBAATC,CAAA,EACVF,CAAA,CAAI8E,KAAA,CAAMC,OAAA,GAAU7E,CAAA,MACd;MAKN,IAJuB,mBAAZC,CAAA,KACVH,CAAA,CAAI8E,KAAA,CAAMC,OAAA,GAAU5E,CAAA,GAAW,KAG5BA,CAAA,EACH,KAAKF,CAAA,IAAQE,CAAA,EACND,CAAA,IAASD,CAAA,IAAQC,CAAA,IACtBwE,CAAA,CAAS1E,CAAA,CAAI8E,KAAA,EAAO7E,CAAA,EAAM;MAK7B,IAAIC,CAAA,EACH,KAAKD,CAAA,IAAQC,CAAA,EACPC,CAAA,IAAYD,CAAA,CAAMD,CAAA,MAAUE,CAAA,CAASF,CAAA,KACzCyE,CAAA,CAAS1E,CAAA,CAAI8E,KAAA,EAAO7E,CAAA,EAAMC,CAAA,CAAMD,CAAA,EAInC;IAAA;EAAA,OAGG,IAAgB,QAAZA,CAAA,CAAK,MAA0B,QAAZA,CAAA,CAAK,IAChCI,CAAA,GACCJ,CAAA,MAAUA,CAAA,GAAOA,CAAA,CAAK+E,OAAA,CAAQ,+BAA+B,QAG/B/E,CAAA,GAA3BA,CAAA,CAAKgF,WAAA,MAAiBjF,CAAA,GAAYC,CAAA,CAAKgF,WAAA,GAAcC,KAAA,CAAM,KACnDjF,CAAA,CAAKiF,KAAA,CAAM,IAElBlF,CAAA,CAADC,CAAA,KAAiBD,CAAA,CAAAC,CAAA,GAAiB,KACtCD,CAAA,CAAAC,CAAA,CAAeA,CAAA,GAAOI,CAAA,IAAcH,CAAA,EAEhCA,CAAA,GACEC,CAAA,GAKJD,CAAA,CAAMA,CAAA,GAAYC,CAAA,CAASD,CAAA,IAJ3BA,CAAA,CAAMA,CAAA,GAAYiF,IAAA,CAAKC,GAAA,IAEvBpF,CAAA,CAAIqF,gBAAA,CAAiBpF,CAAA,EADLI,CAAA,GAAaiF,CAAA,GAAoBC,CAAA,EACblF,CAAA,KAMrCL,CAAA,CAAIwF,mBAAA,CAAoBvF,CAAA,EADRI,CAAA,GAAaiF,CAAA,GAAoBC,CAAA,EACVlF,CAAA,OAElC;IACN,IAAID,CAAA,EAIHH,CAAA,GAAOA,CAAA,CAAK+E,OAAA,CAAQ,eAAe,KAAKA,OAAA,CAAQ,UAAU,cAEjD,YAAT/E,CAAA,IACS,aAATA,CAAA,IACS,WAATA,CAAA,IACS,WAATA,CAAA,IACS,WAATA,CAAA,IAGS,eAATA,CAAA,IACS,eAATA,CAAA,IACS,cAATA,CAAA,IACS,cAATA,CAAA,IACS,WAATA,CAAA,IACAA,CAAA,IAAQD,CAAA,EAER;MACCA,CAAA,CAAIC,CAAA,IAAiB,QAATC,CAAA,GAAgB,KAAKA,CAAA;MAEjC,MAAMF,CAAA;IAAA,CACL,QAAOA,CAAA;IAUU,qBAATE,CAAA,KAES,QAATA,CAAA,KAA4B,MAAVA,CAAA,IAA+B,QAAZD,CAAA,CAAK,KAGpDD,CAAA,CAAIyF,eAAA,CAAgBxF,CAAA,IAFpBD,CAAA,CAAI0F,YAAA,CAAazF,CAAA,EAAMC,CAAA,EAIxB;EAAA;AACD;AAOD,SAASqF,EAAWvF,CAAA;EACnB,IAAI,KAAiBC,CAAA;IACpB,IAAMC,CAAA,GAAe,KAAAD,CAAA,CAAgBD,CAAA,CAAE0B,IAAA,IAAO;IAM9C,IAAK1B,CAAA,CAAEG,CAAA;MAMA,IAAIH,CAAA,CAAEG,CAAA,IAAeD,CAAA,CAAaA,CAAA,EACxC;IAAA,OAJAF,CAAA,CAAEG,CAAA,GAAcgF,IAAA,CAAKC,GAAA;IAMtB,OAAOlF,CAAA,CAAaD,CAAA,CAAQ0F,KAAA,GAAQ1F,CAAA,CAAQ0F,KAAA,CAAM3F,CAAA,IAAKA,CAAA,CACvD;EAAA;AACD;AAOD,SAASsF,EAAkBtF,CAAA;EAC1B,IAAI,KAAJC,CAAA,EACC,OAAO,KAAAA,CAAA,CAAgBD,CAAA,CAAE0B,IAAA,IAAO,GAAMzB,CAAA,CAAQ0F,KAAA,GAAQ1F,CAAA,CAAQ0F,KAAA,CAAM3F,CAAA,IAAKA,CAAA,CAE1E;AAAA;AC5HM,SAASiD,EACfjD,CAAA,EACAE,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA;EAVM,IAaFC,CAAA;IAkBEK,CAAA;IAAGG,CAAA;IAAOM,CAAA;IAAUgB,CAAA;IAAUK,CAAA;IAAUC,CAAA;IACxCK,CAAA;IAKAE,CAAA;IACAE,CAAA;IAuGOO,CAAA;IA4BPE,CAAA;IACHO,CAAA;IASSJ,CAAA;IA6BNM,CAAA;IAlMLG,CAAA,GAAU3E,CAAA,CAASwB,IAAA;EAIpB,SAA6B,MAAzBxB,CAAA,CAASkC,WAAA,EAA2B;ER9CX,MQiDzBjC,CAAA,CAAAoC,GAAA,KACH9B,CAAA,MRpD0B,KQoDTN,CAAA,CAAQoC,GAAA,GAEzBjC,CAAA,GAAoB,CADpBE,CAAA,GAASN,CAAA,CAAA+B,GAAA,GAAgB9B,CAAA,CAAhB8B,GAAA,KAILtB,CAAA,GAAMV,CAAA,CAAX+B,GAAA,KAA2BrB,CAAA,CAAIT,CAAA;EAE/BF,CAAA,EAAO,IAAsB,qBAAX6E,CAAA,EACjB;IAgEC,IA9DIzB,CAAA,GAAWlD,CAAA,CAASyB,KAAA,EAKpB2B,CAAA,IADJ3C,CAAA,GAAMkE,CAAA,CAAQe,WAAA,KACQxF,CAAA,CAAcO,CAAA,CAApCwB,GAAA,GACIqB,CAAA,GAAmB7C,CAAA,GACpB2C,CAAA,GACCA,CAAA,CAAS3B,KAAA,CAAMkE,KAAA,GACflF,CAAA,CAFOoB,EAAA,GAGR3B,CAAA,EAGCD,CAAA,CAAJgC,GAAA,GAECY,CAAA,IADA/B,CAAA,GAAId,CAAA,CAAAiC,GAAA,GAAsBhC,CAAA,CAAtBgC,GAAA,EACwBJ,EAAA,GAAwBf,CAAA,CACpD8E,GAAA,IAEI,eAAejB,CAAA,IAAWA,CAAA,CAAQkB,SAAA,CAAUC,MAAA,GAE/C9F,CAAA,CAAAiC,GAAA,GAAsBnB,CAAA,GAAI,IAAI6D,CAAA,CAAQzB,CAAA,EAAUI,CAAA,KAGhDtD,CAAA,CAAQiC,GAAA,GAAcnB,CAAA,GAAI,IAAI4B,CAAA,CAC7BQ,CAAA,EACAI,CAAA,GAEDxC,CAAA,CAAEoB,WAAA,GAAcyC,CAAA,EAChB7D,CAAA,CAAEgF,MAAA,GAASC,CAAA,GAER3C,CAAA,IAAUA,CAAA,CAAS4C,GAAA,CAAIlF,CAAA,GAE3BA,CAAA,CAAEW,KAAA,GAAQyB,CAAA,EACLpC,CAAA,CAAEmF,KAAA,KAAOnF,CAAA,CAAEmF,KAAA,GAAQ,KACxBnF,CAAA,CAAE6B,OAAA,GAAUW,CAAA,EACZxC,CAAA,CAAAkC,GAAA,GAAmB9C,CAAA,EACnBe,CAAA,GAAQH,CAAA,CAAAkB,GAAA,IAAW,GACnBlB,CAAA,CAACoF,GAAA,GAAoB,IACrBpF,CAAA,CAAAqF,GAAA,GAAoB,KAID,QAAhBrF,CAAA,CAACsF,GAAA,KACJtF,CAAA,CAACsF,GAAA,GAActF,CAAA,CAAEmF,KAAA,GAGsB,QAApCtB,CAAA,CAAQ0B,wBAAA,KACPvF,CAAA,CAAAsF,GAAA,IAAgBtF,CAAA,CAAEmF,KAAA,KACrBnF,CAAA,CAAAsF,GAAA,GAAevF,CAAA,CAAO,IAAIC,CAAA,CAC1BsF,GAAA,IAEDvF,CAAA,CACCC,CAAA,CADKsF,GAAA,EAELzB,CAAA,CAAQ0B,wBAAA,CAAyBnD,CAAA,EAAUpC,CAAA,CAFtCsF,GAAA,KAMP7E,CAAA,GAAWT,CAAA,CAAEW,KAAA,EACbc,CAAA,GAAWzB,CAAA,CAAEmF,KAAA,EACbnF,CAAA,CAACqB,GAAA,GAAUnC,CAAA,EAGPiB,CAAA,EAEkC,QAApC0D,CAAA,CAAQ0B,wBAAA,IACgB,QAAxBvF,CAAA,CAAEwF,kBAAA,IAEFxF,CAAA,CAAEwF,kBAAA,IAGwB,QAAvBxF,CAAA,CAAEyF,iBAAA,IACLzF,CAAA,CAAAoF,GAAA,CAAmB7C,IAAA,CAAKvC,CAAA,CAAEyF,iBAAA,OAErB;MASN,IAPqC,QAApC5B,CAAA,CAAQ0B,wBAAA,IACRnD,CAAA,KAAa3B,CAAA,IACkB,QAA/BT,CAAA,CAAE0F,yBAAA,IAEF1F,CAAA,CAAE0F,yBAAA,CAA0BtD,CAAA,EAAUI,CAAA,IAIrCxC,CAAA,CAADiB,GAAA,KAC6B,QAA3BjB,CAAA,CAAE2F,qBAAA,KAKG,MAJN3F,CAAA,CAAE2F,qBAAA,CACDvD,CAAA,EACApC,CAAA,CACAsF,GAAA,EAAA9C,CAAA,KAEDtD,CAAA,CAAAmC,GAAA,KAAuBlC,CAAA,CAAvBkC,GAAA,GACA;QAkBD,KAhBInC,CAAA,CAAAmC,GAAA,KAAuBlC,CAAA,CAAvBkC,GAAA,KAKHrB,CAAA,CAAEW,KAAA,GAAQyB,CAAA,EACVpC,CAAA,CAAEmF,KAAA,GAAQnF,CAAA,CACVsF,GAAA,EAAAtF,CAAA,CAAAkB,GAAA,IAAW,IAGZhC,CAAA,CAAA+B,GAAA,GAAgB9B,CAAA,CAAhB8B,GAAA,EACA/B,CAAA,CAAQ4B,GAAA,GAAa3B,CAAA,CAAA2B,GAAA,EACrB5B,CAAA,CAAQ4B,GAAA,CAAW8E,OAAA,CAAQ,UAAA5G,CAAA;UACtBA,CAAA,KAAOA,CAAA,CAAK+B,EAAA,GAAW7B,CAAA,CAC3B;QAAA,IAEQ6D,CAAA,GAAI,GAAGA,CAAA,GAAI/C,CAAA,CAACqF,GAAA,CAAiBhF,MAAA,EAAQ0C,CAAA,IAC7C/C,CAAA,CAACoF,GAAA,CAAkB7C,IAAA,CAAKvC,CAAA,CAAAqF,GAAA,CAAkBtC,CAAA;QAE3C/C,CAAA,CAACqF,GAAA,GAAmB,IAEhBrF,CAAA,CAAAoF,GAAA,CAAmB/E,MAAA,IACtBd,CAAA,CAAYgD,IAAA,CAAKvC,CAAA;QAGlB,MAAMhB,CACN;MAAA;MAE4B,QAAzBgB,CAAA,CAAE6F,mBAAA,IACL7F,CAAA,CAAE6F,mBAAA,CAAoBzD,CAAA,EAAUpC,CAAA,CAAhCsF,GAAA,EAA8C9C,CAAA,GAGnB,QAAxBxC,CAAA,CAAE8F,kBAAA,IACL9F,CAAA,CAAAoF,GAAA,CAAmB7C,IAAA,CAAK;QACvBvC,CAAA,CAAE8F,kBAAA,CAAmBrF,CAAA,EAAUgB,CAAA,EAAUK,CAAA,CACzC;MAAA,EAEF;IAAA;IASD,IAPA9B,CAAA,CAAE6B,OAAA,GAAUW,CAAA,EACZxC,CAAA,CAAEW,KAAA,GAAQyB,CAAA,EACVpC,CAAA,CAAAgC,GAAA,GAAehD,CAAA,EACfgB,CAAA,CAAAiB,GAAA,IAAW,GAEPgC,CAAA,GAAahE,CAAA,CAAHwD,GAAA,EACbe,CAAA,GAAQ,GACL,eAAeK,CAAA,IAAWA,CAAA,CAAQkB,SAAA,CAAUC,MAAA,EAAQ;MAQvD,KAPAhF,CAAA,CAAEmF,KAAA,GAAQnF,CAAA,CAAVsF,GAAA,EACAtF,CAAA,CAAAkB,GAAA,IAAW,GAEP+B,CAAA,IAAYA,CAAA,CAAW/D,CAAA,GAE3BS,CAAA,GAAMK,CAAA,CAAEgF,MAAA,CAAOhF,CAAA,CAAEW,KAAA,EAAOX,CAAA,CAAEmF,KAAA,EAAOnF,CAAA,CAAE6B,OAAA,GAE1BuB,CAAA,GAAI,GAAGA,CAAA,GAAIpD,CAAA,CAAAqF,GAAA,CAAkBhF,MAAA,EAAQ+C,CAAA,IAC7CpD,CAAA,CAACoF,GAAA,CAAkB7C,IAAA,CAAKvC,CAAA,CAACqF,GAAA,CAAiBjC,CAAA;MAE3CpD,CAAA,CAAAqF,GAAA,GAAoB,EACpB;IAAA,OACA;MACCrF,CAAA,CAAAkB,GAAA,IAAW,GACP+B,CAAA,IAAYA,CAAA,CAAW/D,CAAA,GAE3BS,CAAA,GAAMK,CAAA,CAAEgF,MAAA,CAAOhF,CAAA,CAAEW,KAAA,EAAOX,CAAA,CAAEmF,KAAA,EAAOnF,CAAA,CAAE6B,OAAA,GAGnC7B,CAAA,CAAEmF,KAAA,GAAQnF,CAAA,CAAVsF,GAAA;IAAA,SACQtF,CAAA,CAACkB,GAAA,MAAasC,CAAA,GAAQ;IAIhCxD,CAAA,CAAEmF,KAAA,GAAQnF,CAAA,CAAVsF,GAAA,EAEyB,QAArBtF,CAAA,CAAE+F,eAAA,KACL3G,CAAA,GAAgBW,CAAA,CAAOA,CAAA,CAAO,IAAIX,CAAA,GAAgBY,CAAA,CAAE+F,eAAA,MAGhD5F,CAAA,IAAsC,QAA7BH,CAAA,CAAEgG,uBAAA,KACflE,CAAA,GAAW9B,CAAA,CAAEgG,uBAAA,CAAwBvF,CAAA,EAAUgB,CAAA,IAOhDqB,CAAA,CACC9D,CAAA,EACAY,CAAA,CAJG8D,CAAA,GADI,QAAP/D,CAAA,IAAeA,CAAA,CAAIe,IAAA,KAASiB,CAAA,IAAuB,QAAXhC,CAAA,CAAIiB,GAAA,GACLjB,CAAA,CAAIgB,KAAA,CAAML,QAAA,GAAWX,CAAA,IAIpC+D,CAAA,GAAe,CAACA,CAAA,GACxCxE,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,GAGDM,CAAA,CAAEqC,IAAA,GAAOnD,CAAA,CAGT+B,GAAA,EAAA/B,CAAA,CAAAqC,GAAA,KRxPuB,KQ0PnBvB,CAAA,CAAAoF,GAAA,CAAmB/E,MAAA,IACtBd,CAAA,CAAYgD,IAAA,CAAKvC,CAAA,GAGd+B,CAAA,KACH/B,CAAA,CAAA8E,GAAA,GAAkB9E,CAAA,CAACe,EAAA,GAAwB,KAkB5C;EAAA,CAhBC,QAAO/B,CAAA;IACRE,CAAA,CAAAmC,GAAA,GAAqB,MAEjB5B,CAAA,IAAoC,QAArBH,CAAA,IAClBJ,CAAA,CAAA+B,GAAA,GAAgBzB,CAAA,EAChBN,CAAA,CAAAqC,GAAA,IAAmB9B,CAAA,GAChB,MRhRqB,IQkRxBH,CAAA,CAAkBA,CAAA,CAAkB2G,OAAA,CAAQzG,CAAA,KAAW,SAIvDN,CAAA,CAAA+B,GAAA,GAAgB9B,CAAA,CAChB8B,GAAA,EAAA/B,CAAA,CAAA4B,GAAA,GAAqB3B,CAAA,CAArB2B,GAAA,GAED7B,CAAA,CAAAgC,GAAA,CAAoBjC,CAAA,EAAGE,CAAA,EAAUC,CAAA,CACjC;EAAA,OAEoB,QAArBG,CAAA,IACAJ,CAAA,CAAAmC,GAAA,KAAuBlC,CAAA,CAAvBkC,GAAA,IAEAnC,CAAA,CAAA4B,GAAA,GAAqB3B,CAAA,CAArB2B,GAAA,EACA5B,CAAA,CAAQ+B,GAAA,GAAQ9B,CAAA,CAAA8B,GAAA,IAEhB/B,CAAA,CAAA+B,GAAA,GAAgBiF,CAAA,CACf/G,CAAA,CACA8B,GAAA,EAAA/B,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAE,CAAA,EACAC,CAAA;EAAA,CAIGC,CAAA,GAAMV,CAAA,CAAQkH,MAAA,KAASxG,CAAA,CAAIT,CAAA,CAChC;AAAA;AAOe,SAAA2D,EAAW7D,CAAA,EAAaE,CAAA,EAAMC,CAAA;EAC7C,KAAK,IAAIC,CAAA,GAAI,GAAGA,CAAA,GAAID,CAAA,CAASkB,MAAA,EAAQjB,CAAA,IACpC4D,CAAA,CAAS7D,CAAA,CAASC,CAAA,GAAID,CAAA,GAAWC,CAAA,GAAID,CAAA,GAAWC,CAAA;EAG7CH,CAAA,CAAJkC,GAAA,IAAqBlC,CAAA,CAAOkC,GAAA,CAASjC,CAAA,EAAMF,CAAA,GAE3CA,CAAA,CAAYyE,IAAA,CAAK,UAAAvE,CAAA;IAChB;MAECF,CAAA,GAAcE,CAAA,CAAdkG,GAAA,EACAlG,CAAA,CAACkG,GAAA,GAAoB,IACrBpG,CAAA,CAAYyE,IAAA,CAAK,UAAAzE,CAAA;QAEhBA,CAAA,CAAGuB,IAAA,CAAKrB,CAAA,CACR;MAAA,EAGD;IAAA,CAFC,QAAOF,CAAA;MACRC,CAAA,CAAOgC,GAAA,CAAajC,CAAA,EAAGE,CAAA,CAAAmC,GAAA,CACvB;IAAA;EACD,EACD;AAAA;AAiBD,SAAS6E,EACRjH,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,EACAE,CAAA;EATD,IAeKC,CAAA;IAEAI,CAAA;IAEAI,CAAA;IAEAM,CAAA;IACAgB,CAAA;IACAE,CAAA;IACAC,CAAA;IAbAG,CAAA,GAAW5C,CAAA,CAASwB,KAAA;IACpByB,CAAA,GAAWlD,CAAA,CAASyB,KAAA;IACpB2B,CAAA,GAAkCpD,CAAA,CAASwB,IAAA;EAgB/C,IAFiB,UAAb4B,CAAA,KAAoBjD,CAAA,IAAQ,IAEP,QAArBC,CAAA,EACH,KAAKK,CAAA,GAAI,GAAGA,CAAA,GAAIL,CAAA,CAAkBe,MAAA,EAAQV,CAAA,IAMzC,KALA8B,CAAA,GAAQnC,CAAA,CAAkBK,CAAA,MAOzB,kBAAkB8B,CAAA,MAAYa,CAAA,KAC7BA,CAAA,GAAWb,CAAA,CAAM2E,SAAA,KAAc9D,CAAA,GAA8B,MAAnBb,CAAA,CAAM8B,QAAA,GAChD;IACDtE,CAAA,GAAMwC,CAAA,EACNnC,CAAA,CAAkBK,CAAA,IAAK;IACvB;EACA;EAIH,IAAW,QAAPV,CAAA,EAAa;IAChB,IAAiB,SAAbqD,CAAA,EACH,OAAO+D,QAAA,CAASC,cAAA,CAAelE,CAAA;IAI/BnD,CAAA,GADGI,CAAA,GACGgH,QAAA,CAASE,eAAA,CAAgB,8BAA8BjE,CAAA,IAEvD+D,QAAA,CAASG,aAAA,CAAclE,CAAA,EAAUF,CAAA,CAASqE,EAAA,IAAMrE,CAAA,GAIvD9C,CAAA,GAAoB,MAGpBE,CAAA,IAAc,CACd;EAAA;EAED,IAAiB,SAAb8C,CAAA,EAECP,CAAA,KAAaK,CAAA,IAAc5C,CAAA,IAAeP,CAAA,CAAIyH,IAAA,KAAStE,CAAA,KAC1DnD,CAAA,CAAIyH,IAAA,GAAOtE,CAAA,OAEN;IASN,IAPA9C,CAAA,GAAoBA,CAAA,IAAqBN,CAAA,CAAMuB,IAAA,CAAKtB,CAAA,CAAI0H,UAAA,GAExD5E,CAAA,GAAW5C,CAAA,CAASwB,KAAA,IAASlB,CAAA,GAKxBD,CAAA,IAAoC,QAArBF,CAAA,EAEnB,KADAyC,CAAA,GAAW,IACNpC,CAAA,GAAI,GAAGA,CAAA,GAAIV,CAAA,CAAI2H,UAAA,CAAWvG,MAAA,EAAQV,CAAA,IAEtCoC,CAAA,EADAN,CAAA,GAAQxC,CAAA,CAAI2H,UAAA,CAAWjH,CAAA,GACRkH,IAAA,IAAQpF,CAAA,CAAMoD,KAAA;IAI/B,KAAKlF,CAAA,IAAKoC,CAAA,EACTN,CAAA,GAAQM,CAAA,CAASpC,CAAA,GACR,cAALA,CAAA,KACY,6BAALA,CAAA,GACVQ,CAAA,GAAUsB,CAAA,GACM,UAAN9B,CAAA,IAAiBA,CAAA,IAAKyC,CAAA,IAChCyB,CAAA,CAAY5E,CAAA,EAAKU,CAAA,EAAG,MAAM8B,CAAA,EAAOpC,CAAA;IAMnC,KAAKM,CAAA,IAAKyC,CAAA,EACTX,CAAA,GAAQW,CAAA,CAASzC,CAAA,GACR,cAALA,CAAA,GACHc,CAAA,GAAcgB,CAAA,GACC,6BAAL9B,CAAA,GACVI,CAAA,GAAU0B,CAAA,GACK,WAAL9B,CAAA,GACVgC,CAAA,GAAaF,CAAA,GACE,aAAL9B,CAAA,GACViC,CAAA,GAAUH,CAAA,GAEJ,UAAN9B,CAAA,IACEH,CAAA,IAA+B,qBAATiC,CAAA,IACxBM,CAAA,CAASpC,CAAA,MAAO8B,CAAA,IAEhBoC,CAAA,CAAY5E,CAAA,EAAKU,CAAA,EAAG8B,CAAA,EAAOM,CAAA,CAASpC,CAAA,GAAIN,CAAA;IAK1C,IAAIU,CAAA,EAGDP,CAAA,IACCW,CAAA,KACAJ,CAAA,CAAA+G,MAAA,KAAmB3G,CAAA,CAAnB2G,MAAA,IACA/G,CAAA,CAAO+G,MAAA,KAAY7H,CAAA,CAAI8H,SAAA,MAEzB9H,CAAA,CAAI8H,SAAA,GAAYhH,CAAA,CAAhB+G,MAAA,GAGD5H,CAAA,CAAA4B,GAAA,GAAqB,QAqBrB,IAnBIX,CAAA,KAASlB,CAAA,CAAI8H,SAAA,GAAY,KAE7BjE,CAAA,CACC7D,CAAA,EACAW,CAAA,CAAQa,CAAA,IAAeA,CAAA,GAAc,CAACA,CAAA,GACtCvB,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,IAAsB,oBAAbiD,CAAA,EACThD,CAAA,EACAC,CAAA,EACAD,CAAA,GACGA,CAAA,CAAkB,KAClBH,CAAA,CAAA2B,GAAA,IAAsBgB,CAAA,CAAc3C,CAAA,EAAU,IACjDK,CAAA,EACAE,CAAA,GAIwB,QAArBJ,CAAA,EACH,KAAKK,CAAA,GAAIL,CAAA,CAAkBe,MAAA,EAAQV,CAAA,KACN,QAAxBL,CAAA,CAAkBK,CAAA,KAAYK,CAAA,CAAWV,CAAA,CAAkBK,CAAA;IAM7DH,CAAA,KACJG,CAAA,GAAI,cAEY,MAAfgC,CAAA,KAKCA,CAAA,KAAe1C,CAAA,CAAIU,CAAA,KACL,eAAb2C,CAAA,KAA4BX,CAAA,IAIf,aAAbW,CAAA,IAAyBX,CAAA,KAAeI,CAAA,CAASpC,CAAA,MAEnDkE,CAAA,CAAY5E,CAAA,EAAKU,CAAA,EAAGgC,CAAA,EAAYI,CAAA,CAASpC,CAAA,IAAI,IAG9CA,CAAA,GAAI,gBACY,MAAZiC,CAAA,IAAyBA,CAAA,KAAY3C,CAAA,CAAIU,CAAA,KAC5CkE,CAAA,CAAY5E,CAAA,EAAKU,CAAA,EAAGiC,CAAA,EAASG,CAAA,CAASpC,CAAA,IAAI,GAG5C;EAAA;EAED,OAAOV,CACP;AAAA;AAQM,SAAS+D,EAAShE,CAAA,EAAKE,CAAA,EAAOC,CAAA;EACpC;IACmB,qBAAPH,CAAA,GAAmBA,CAAA,CAAIE,CAAA,IAC7BF,CAAA,CAAI0C,OAAA,GAAUxC,CAGnB;EAAA,CAFC,QAAOF,CAAA;IACRC,CAAA,CAAAgC,GAAA,CAAoBjC,CAAA,EAAGG,CAAA,CACvB;EAAA;AACD;AASe,SAAAkE,EAAQrE,CAAA,EAAOE,CAAA,EAAaC,CAAA;EAA5B,IACXC,CAAA,EAuBMC,CAAA;EAdV,IARIJ,CAAA,CAAQ+H,OAAA,IAAS/H,CAAA,CAAQ+H,OAAA,CAAQhI,CAAA,IAEhCI,CAAA,GAAIJ,CAAA,CAAM6B,GAAA,MACTzB,CAAA,CAAEsC,OAAA,IAAWtC,CAAA,CAAEsC,OAAA,KAAY1C,CAAA,CAAdiC,GAAA,IACjB+B,CAAA,CAAS5D,CAAA,EAAG,MAAMF,CAAA,IAIU,SAAzBE,CAAA,GAAIJ,CAAA,CAAHmC,GAAA,GAA8B;IACnC,IAAI/B,CAAA,CAAE6H,oBAAA,EACL;MACC7H,CAAA,CAAE6H,oBAAA,EAGF;IAAA,CAFC,QAAOjI,CAAA;MACRC,CAAA,CAAAgC,GAAA,CAAoBjC,CAAA,EAAGE,CAAA,CACvB;IAAA;IAGFE,CAAA,CAAEiD,IAAA,GAAOjD,CAAA,CAAC4C,GAAA,GAAc,MACxBhD,CAAA,CAAKmC,GAAA,QAAc,CACnB;EAAA;EAED,IAAK/B,CAAA,GAAIJ,CAAA,CAAH8B,GAAA,EACL,KAASzB,CAAA,GAAI,GAAGA,CAAA,GAAID,CAAA,CAAEiB,MAAA,EAAQhB,CAAA,IACzBD,CAAA,CAAEC,CAAA,KACLgE,CAAA,CACCjE,CAAA,CAAEC,CAAA,GACFH,CAAA,EACAC,CAAA,IAAoC,qBAAfH,CAAA,CAAM0B,IAAA;EAM1BvB,CAAA,IAA4B,QAAdH,CAAA,CAAKiC,GAAA,IACvBjB,CAAA,CAAWhB,CAAA,CACXiC,GAAA,GAIDjC,CAAA,CAAK+B,EAAA,GAAW/B,CAAA,CAAAiC,GAAA,GAAajC,CAAA,CAAKkC,GAAA,QAAY,CAC9C;AAAA;AAGD,SAAS+D,EAASjG,CAAA,EAAOC,CAAA,EAAOC,CAAA;EAC/B,OAAO,KAAKkC,WAAA,CAAYpC,CAAA,EAAOE,CAAA,CAC/B;AAAA;AAAA,SCjlBegI,EAAOhI,CAAA,EAAOC,CAAA,EAAWC,CAAA;EAAA,IAMpCC,CAAA,EAOAC,CAAA,EAQAC,CAAA,EACHC,CAAA;EArBGP,CAAA,CAAA8B,EAAA,IAAe9B,CAAA,CAAO8B,EAAA,CAAO7B,CAAA,EAAOC,CAAA,GAYpCG,CAAA,IAPAD,CAAA,GAAoC,qBAAfD,CAAA,IAQtB,OACCA,CAAA,IAAeA,CAAA,CAAhB0B,GAAA,IAA0C3B,CAAA,CAA1C2B,GAAA,EAMCvB,CAAA,GAAc,IACjBC,CAAA,GAAW,IACZyC,CAAA,CACC9C,CAAA,EAPDD,CAAA,KAAWG,CAAA,IAAeD,CAAA,IAAgBD,CAAA,EAAlC2B,GAAA,GACPX,CAAA,CAAcwB,CAAA,EAAU,MAAM,CAACzC,CAAA,IAU/BI,CAAA,IAAYG,CAAA,EACZA,CAAA,OAC8B,MAA9BN,CAAA,CAAUgD,eAAA,GACT9C,CAAA,IAAeD,CAAA,GACb,CAACA,CAAA,IACDE,CAAA,GACA,OACAH,CAAA,CAAUgI,UAAA,GACVnI,CAAA,CAAMuB,IAAA,CAAKpB,CAAA,CAAUwH,UAAA,IACrB,MACHpH,CAAA,GACCF,CAAA,IAAeD,CAAA,GACbA,CAAA,GACAE,CAAA,GACAA,CAAA,CADQ2B,GAAA,GAER9B,CAAA,CAAUgI,UAAA,EACb9H,CAAA,EACAG,CAAA,GAGDN,CAAA,CAAKgC,GAAA,QAAY,GACjB2B,CAAA,CAAWtD,CAAA,EAAaL,CAAA,EAAOM,CAAA,CAC/B;AAAA;AAOe,SAAA4H,EAAQpI,CAAA,EAAOC,CAAA;EAC9BiI,CAAA,CAAOlI,CAAA,EAAOC,CAAA,EAAWmI,CAAA,CACzB;AAAA;AAAA,SC5DeC,EAAapI,CAAA,EAAOC,CAAA,EAAOC,CAAA;EAAA,IAEzCC,CAAA;IACAC,CAAA;IACAC,CAAA;IAEGC,CAAA;IALAC,CAAA,GAAkBO,CAAA,CAAO,CAAD,GAAKd,CAAA,CAAM0B,KAAA;EAWvC,KAAKrB,CAAA,IAJDL,CAAA,CAAMyB,IAAA,IAAQzB,CAAA,CAAMyB,IAAA,CAAKF,YAAA,KAC5BjB,CAAA,GAAeN,CAAA,CAAMyB,IAAA,CAAKF,YAAA,GAGjBtB,CAAA,EACA,SAALI,CAAA,GAAYF,CAAA,GAAMF,CAAA,CAAMI,CAAA,IACd,SAALA,CAAA,GAAYD,CAAA,GAAMH,CAAA,CAAMI,CAAA,IAEhCE,CAAA,CAAgBF,CAAA,SADK,MAAbJ,CAAA,CAAMI,CAAA,UAAqC,MAAjBC,CAAA,GACbA,CAAA,CAAaD,CAAA,IAEbJ,CAAA,CAAMI,CAAA;EAS7B,OALIc,SAAA,CAAUC,MAAA,GAAS,MACtBb,CAAA,CAAgBc,QAAA,GACfF,SAAA,CAAUC,MAAA,GAAS,IAAIrB,CAAA,CAAMuB,IAAA,CAAKH,SAAA,EAAW,KAAKjB,CAAA,GAG7CsB,CAAA,CACNxB,CAAA,CAAMyB,IAAA,EACNlB,CAAA,EACAJ,CAAA,IAAOH,CAAA,CAAM2B,GAAA,EACbvB,CAAA,IAAOJ,CAAA,CAAM4B,GAAA,EACb,KAED;AAAA;AL1Ce,SAAAyG,EAActI,CAAA,EAAcC,CAAA;EAG3C,IAAMC,CAAA,GAAU;IACfiC,GAAA,EAHDlC,CAAA,GAAY,SAASO,CAAA;IAIpBuB,EAAA,EAAe/B,CAAA;IAEfuI,QAAA,EAJe,SAAAA,CAINvI,CAAA,EAAOC,CAAA;MAIf,OAAOD,CAAA,CAAMsB,QAAA,CAASrB,CAAA,CACtB;IAAA;IAEDuI,QAAA,WAAAA,CAASxI,CAAA;MAAA,IAGHE,CAAA,EACAC,CAAA;MAsCL,OAzCK,KAAK4G,eAAA,KAEL7G,CAAA,GAAO,KACPC,CAAA,GAAM,CAAV,GACIF,CAAA,IAAa,MAEjB,KAAK8G,eAAA,GAAkB;QAAA,OAAM5G,CAAN;MAAA,GAEvB,KAAKwG,qBAAA,GAAwB,UAAU3G,CAAA;QAClC,KAAK2B,KAAA,CAAMkE,KAAA,KAAU7F,CAAA,CAAO6F,KAAA,IAe/B3F,CAAA,CAAKuE,IAAA,CAAK,UAAAzE,CAAA;UACTA,CAAA,CAACiC,GAAA,IAAU,GACXqB,CAAA,CAActD,CAAA,CACd;QAAA,EAEF;MAAA,GAED,KAAKkG,GAAA,GAAM,UAAAlG,CAAA;QACVE,CAAA,CAAKqD,IAAA,CAAKvD,CAAA;QACV,IAAIC,CAAA,GAAMD,CAAA,CAAEiI,oBAAA;QACZjI,CAAA,CAAEiI,oBAAA,GAAuB;UACxB/H,CAAA,CAAKuI,MAAA,CAAOvI,CAAA,CAAK+G,OAAA,CAAQjH,CAAA,GAAI,IACzBC,CAAA,IAAKA,CAAA,CAAIsB,IAAA,CAAKvB,CAAA,CAClB;QAAA,CACD;MAAA,IAGKA,CAAA,CAAMsB,QACb;IAAA;EAAA;EASF,OAAQpB,CAAA,CAAQsI,QAAA,CAAuBzG,EAAA,GAAA7B,CAAA,CAAQqI,QAAA,CAAS3C,WAAA,GACvD1F,CACD;AAAA;AJ5CYF,CAAA,GAAQU,CAAA,CAAUwE,KAAA,ECjBzBjF,CAAA,GAAU;EACfgC,GAAA,ESHM,SAAAA,CAAqBjC,CAAA,EAAOC,CAAA,EAAOC,CAAA,EAAUC,CAAA;IAQnD,KANA,IAAIC,CAAA,EAEHC,CAAA,EAEAC,CAAA,EAEOL,CAAA,GAAQA,CAAA,CAAhB8B,EAAA,GACC,KAAK3B,CAAA,GAAYH,CAAA,CAAHkC,GAAA,MAAyB/B,CAAA,CAAD2B,EAAA,EACrC;MAcC,KAbA1B,CAAA,GAAOD,CAAA,CAAUgC,WAAA,KAE4B,QAAjC/B,CAAA,CAAKqI,wBAAA,KAChBtI,CAAA,CAAUuI,QAAA,CAAStI,CAAA,CAAKqI,wBAAA,CAAyB1I,CAAA,IACjDM,CAAA,GAAUF,CAAA,CAAH8B,GAAA,GAG2B,QAA/B9B,CAAA,CAAUwI,iBAAA,KACbxI,CAAA,CAAUwI,iBAAA,CAAkB5I,CAAA,EAAOG,CAAA,IAAa,CAAhD,IACAG,CAAA,GAAUF,CAAA,CACV8B,GAAA,GAGG5B,CAAA,EACH,OAAQF,CAAA,CAAS0F,GAAA,GAAiB1F,CAInC;IAAA,CAFC,QAAOH,CAAA;MACRD,CAAA,GAAQC,CACR;IAAA;IAIH,MAAMD,CACN;EAAA;AAAA,GRxCGE,CAAA,GAAU,GAgGDC,CAAA,GAAiB,SAAA0I,CAAA7I,CAAA;EAC7B,OAAS,QAATA,CAAA,IAAsC,QAArBA,CAAA,CAAMoC,WADW;AAAA,GCxEnCQ,CAAA,CAAcmD,SAAA,CAAU4C,QAAA,GAAW,UAAU3I,CAAA,EAAQC,CAAA;EAEpD,IAAIC,CAAA;EAEHA,CAAA,GADsB,QAAnB,KAAAoG,GAAA,IAA2B,KAAAA,GAAA,KAAoB,KAAKH,KAAA,GACnD,KACJG,GAAA,GACI,KAAkBA,GAAA,GAAAvF,CAAA,CAAO,IAAI,KAAKoF,KAAA,GAGlB,qBAAVnG,CAAA,KAGVA,CAAA,GAASA,CAAA,CAAOe,CAAA,CAAO,CAAD,GAAKb,CAAA,GAAI,KAAKyB,KAAA,IAGjC3B,CAAA,IACHe,CAAA,CAAOb,CAAA,EAAGF,CAAA,GAIG,QAAVA,CAAA,IAEA,KAAAqC,GAAA,KACCpC,CAAA,IACH,KAAAoG,GAAA,CAAqB9C,IAAA,CAAKtD,CAAA,GAE3BqD,CAAA,CAAc,MAEf;AAAA,GAQDV,CAAA,CAAcmD,SAAA,CAAU+C,WAAA,GAAc,UAAU9I,CAAA;EAC3C,KAAaqC,GAAA,KAIhB,KAAAJ,GAAA,IAAc,GACVjC,CAAA,IAAU,KAAAoG,GAAA,CAAsB7C,IAAA,CAAKvD,CAAA,GACzCsD,CAAA,CAAc,MAEf;AAAA,GAYDV,CAAA,CAAcmD,SAAA,CAAUC,MAAA,GAASrD,CAAA,EAgG7BvC,CAAA,GAAgB,IAadE,CAAA,GACa,qBAAXyI,OAAA,GACJA,OAAA,CAAQhD,SAAA,CAAUiD,IAAA,CAAKC,IAAA,CAAKF,OAAA,CAAQG,OAAA,MACpCC,UAAA,EAuBE5I,CAAA,GAAY,SAAA6I,CAACpJ,CAAA,EAAGC,CAAA;EAAA,OAAMD,CAAA,CAAAqC,GAAA,CAAkBL,GAAA,GAAA/B,CAAA,CAAAoC,GAAA,CAAAL,GAA5B;AAAA,GAmClBwB,CAAA,CAAAC,GAAA,GAAyB,GC5PdjD,CAAA,GAAI;AAAA,SAAAoC,CAAA,IAAAyG,SAAA,EAAA1G,CAAA,IAAA2G,QAAA,EAAAjB,CAAA,IAAAkB,YAAA,EAAAjB,CAAA,IAAAkB,aAAA,EAAArI,CAAA,IAAAqG,aAAA,EAAA/E,CAAA,IAAAgH,SAAA,EAAAtI,CAAA,IAAAP,CAAA,EAAAwH,CAAA,IAAAsB,OAAA,EAAAvJ,CAAA,IAAA0I,cAAA,EAAA5I,CAAA,IAAA0J,OAAA,EAAAzB,CAAA,IAAAlC,MAAA,EAAAxB,CAAA,IAAAoF,YAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}