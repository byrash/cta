{"ast":null,"code":"import { domify } from 'min-dom';\nvar OVERLAY_HTML = '<div class=\"drop-overlay\">' + '<div class=\"box\">' + '<div class=\"label\">{label}</div>' + '</div>' + '</div>';\n\n/**\n * Add file drop functionality to the given element,\n * calling fn(files...) on drop.\n *\n * @example\n *\n * var node = document.querySelector('#container');\n *\n * var dropHandler = fileDrop(handleFiles);\n *\n * node.addEventListener('dragover', dropHandler);\n *\n * @param {String} [label='Drop files here']\n * @param {Function} fn\n *\n * @return {Function} drag start callback function\n */\nfunction fileDrop(label, fn) {\n  if (typeof label === 'function') {\n    fn = label;\n    label = 'Drop files here';\n  }\n  var self;\n  var extraArgs;\n\n  // we are bound, if overlay exists\n  var overlay;\n  function onDrop(event) {\n    event.preventDefault();\n    asyncMap(event.dataTransfer.files, readFile, function (err, files) {\n      if (err) {\n        console.warn('file drop failed', err);\n      } else {\n        var args = extraArgs.concat([files, event]);\n\n        // cleanup on drop\n        // onEnd(event);\n\n        // call provided fn with extraArgs..., files, event\n        fn.apply(self, args);\n      }\n    });\n  }\n  function isDragAllowed(dataTransfer) {\n    if (!dataTransfer || !dataTransfer.items.length) {\n      return false;\n    }\n    var hasFile = false;\n    for (var i = 0; i < dataTransfer.items.length; i++) {\n      if (dataTransfer.items[i].type === 'file' || dataTransfer.items[i].kind === 'file') {\n        hasFile = true;\n      }\n    }\n    return hasFile;\n  }\n  function onDragover() {\n    // (0) extract extra arguments (extraArgs..., event)\n    var args = slice(arguments),\n      event = args.pop();\n    var dataTransfer = event.dataTransfer,\n      target = event.currentTarget || event.target;\n    if (!isDragAllowed(dataTransfer)) {\n      return;\n    }\n\n    // make us a drop zone\n    event.preventDefault();\n    dataTransfer.dropEffect = 'copy';\n\n    // only register if we do not drag and drop already\n    if (overlay) {\n      return;\n    }\n    overlay = createOverlay(label);\n    target.appendChild(overlay);\n    self = this;\n    extraArgs = args;\n\n    // do not register events during testing\n    if (!target) {\n      return;\n    }\n\n    // (2) setup drag listeners\n\n    function onLeave(event) {\n      var relatedTarget = event.relatedTarget;\n      if (target.contains(relatedTarget)) {\n        return;\n      }\n      onEnd();\n    }\n\n    // (2.1) detach on end\n    function onEnd(event) {\n      document.removeEventListener('drop', onDrop);\n      document.removeEventListener('drop', onEnd);\n      document.removeEventListener('dragleave', onLeave);\n      document.removeEventListener('dragend', onEnd);\n      document.removeEventListener('dragover', preventDrop);\n      if (overlay) {\n        target.removeChild(overlay);\n        overlay = null;\n      }\n    }\n\n    // (2.0) attach drag + cleanup event\n    document.addEventListener('drop', onDrop);\n    document.addEventListener('drop', onEnd);\n    document.addEventListener('dragleave', onLeave);\n    document.addEventListener('dragend', onEnd);\n    document.addEventListener('dragover', preventDrop);\n  }\n  onDragover.onDrop = onDrop;\n  return onDragover;\n}\n\n// helpers ////////////////////////////////////\n\nfunction readFile(dropFile, done) {\n  if (!window.FileReader) {\n    return done();\n  }\n  var reader = new FileReader();\n\n  // Closure to capture the file information.\n  reader.onload = function (e) {\n    done(null, {\n      name: dropFile.name,\n      path: dropFile.path,\n      contents: e.target.result\n    });\n  };\n  reader.onerror = function (event) {\n    done(event.target.error);\n  };\n\n  // Read in the image file as a data URL.\n  reader.readAsText(dropFile);\n}\nfunction asyncMap(elements, iterator, done) {\n  var idx = 0,\n    results = [];\n  function next() {\n    if (idx === elements.length) {\n      done(null, results);\n    } else {\n      iterator(elements[idx], function (err, result) {\n        if (err) {\n          return done(err);\n        } else {\n          results[idx] = result;\n          idx++;\n          next();\n        }\n      });\n    }\n  }\n  next();\n}\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\nfunction createOverlay(label) {\n  var markup = OVERLAY_HTML.replace('{label}', label);\n  return domify(markup);\n}\nfunction preventDrop(event) {\n  event.preventDefault();\n}\nexport default fileDrop;","map":{"version":3,"names":["OVERLAY_HTML","fileDrop","label","fn","self","extraArgs","overlay","onDrop","event","preventDefault","asyncMap","dataTransfer","files","readFile","err","console","warn","args","concat","apply","isDragAllowed","items","length","hasFile","i","type","kind","onDragover","slice","arguments","pop","target","currentTarget","dropEffect","createOverlay","appendChild","onLeave","relatedTarget","contains","onEnd","document","removeEventListener","preventDrop","removeChild","addEventListener","dropFile","done","window","FileReader","reader","onload","e","name","path","contents","result","onerror","error","readAsText","elements","iterator","idx","results","next","arr","Array","prototype","call","markup","replace","domify"],"sources":["/Users/Shivaji/Workspace/Play/cta/node_modules/file-drops/lib/index.js"],"sourcesContent":["import {\n  domify\n} from 'min-dom';\n\nvar OVERLAY_HTML = '<div class=\"drop-overlay\">' +\n                     '<div class=\"box\">' +\n                        '<div class=\"label\">{label}</div>' +\n                     '</div>' +\n                   '</div>';\n\n/**\n * Add file drop functionality to the given element,\n * calling fn(files...) on drop.\n *\n * @example\n *\n * var node = document.querySelector('#container');\n *\n * var dropHandler = fileDrop(handleFiles);\n *\n * node.addEventListener('dragover', dropHandler);\n *\n * @param {String} [label='Drop files here']\n * @param {Function} fn\n *\n * @return {Function} drag start callback function\n */\nexport default function fileDrop(label, fn) {\n\n  if (typeof label === 'function') {\n    fn = label;\n    label = 'Drop files here';\n  }\n\n  var self;\n  var extraArgs;\n\n  // we are bound, if overlay exists\n  var overlay;\n\n  function onDrop(event) {\n\n    event.preventDefault();\n\n    asyncMap(event.dataTransfer.files, readFile, function(err, files) {\n\n      if (err) {\n        console.warn('file drop failed', err);\n      } else {\n\n        var args = extraArgs.concat([ files, event ]);\n\n        // cleanup on drop\n        // onEnd(event);\n\n        // call provided fn with extraArgs..., files, event\n        fn.apply(self, args);\n      }\n    });\n  }\n\n  function isDragAllowed(dataTransfer) {\n\n    if (!dataTransfer || !dataTransfer.items.length) {\n      return false;\n    }\n\n    var hasFile = false;\n\n    for (var i = 0; i < dataTransfer.items.length; i++) {\n      if (dataTransfer.items[i].type === 'file' || dataTransfer.items[i].kind === 'file') {\n        hasFile = true;\n      }\n    }\n\n    return hasFile;\n  }\n\n  function onDragover() {\n\n    // (0) extract extra arguments (extraArgs..., event)\n    var args = slice(arguments),\n        event = args.pop();\n\n    var dataTransfer = event.dataTransfer,\n        target = event.currentTarget || event.target;\n\n    if (!isDragAllowed(dataTransfer)) {\n      return;\n    }\n\n    // make us a drop zone\n    event.preventDefault();\n\n    dataTransfer.dropEffect = 'copy';\n\n    // only register if we do not drag and drop already\n    if (overlay) {\n      return;\n    }\n\n    overlay = createOverlay(label);\n\n    target.appendChild(overlay);\n\n    self = this;\n    extraArgs = args;\n\n\n    // do not register events during testing\n    if (!target) {\n      return;\n    }\n\n\n    // (2) setup drag listeners\n\n    function onLeave(event) {\n\n      var relatedTarget = event.relatedTarget;\n\n      if (target.contains(relatedTarget)) {\n        return;\n      }\n\n      onEnd(event);\n    }\n\n    // (2.1) detach on end\n    function onEnd(event) {\n\n      document.removeEventListener('drop', onDrop);\n      document.removeEventListener('drop', onEnd);\n      document.removeEventListener('dragleave', onLeave);\n      document.removeEventListener('dragend', onEnd);\n      document.removeEventListener('dragover', preventDrop);\n\n      if (overlay) {\n        target.removeChild(overlay);\n        overlay = null;\n      }\n    }\n\n    // (2.0) attach drag + cleanup event\n    document.addEventListener('drop', onDrop);\n    document.addEventListener('drop', onEnd);\n    document.addEventListener('dragleave', onLeave);\n    document.addEventListener('dragend', onEnd);\n    document.addEventListener('dragover', preventDrop);\n  }\n\n  onDragover.onDrop = onDrop;\n\n  return onDragover;\n}\n\n\n// helpers ////////////////////////////////////\n\nfunction readFile(dropFile, done) {\n\n  if (!window.FileReader) {\n    return done();\n  }\n\n  var reader = new FileReader();\n\n  // Closure to capture the file information.\n  reader.onload = function(e) {\n\n    done(null, {\n      name: dropFile.name,\n      path: dropFile.path,\n      contents: e.target.result\n    });\n  };\n\n  reader.onerror = function(event) {\n    done(event.target.error);\n  };\n\n  // Read in the image file as a data URL.\n  reader.readAsText(dropFile);\n}\n\n\nfunction asyncMap(elements, iterator, done) {\n\n  var idx = 0,\n      results = [];\n\n  function next() {\n\n    if (idx === elements.length) {\n      done(null, results);\n    } else {\n\n      iterator(elements[idx], function(err, result) {\n\n        if (err) {\n          return done(err);\n        } else {\n          results[idx] = result;\n          idx++;\n\n          next();\n        }\n      });\n    }\n  }\n\n  next();\n}\n\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\nfunction createOverlay(label) {\n  var markup = OVERLAY_HTML.replace('{label}', label);\n\n  return domify(markup);\n}\n\nfunction preventDrop(event) {\n  event.preventDefault();\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}