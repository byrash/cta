{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./App.css';import{Form}from'@bpmn-io/form-js';import\"@bpmn-io/form-js/dist/assets/form-js.css\";import axios from\"axios\";import FileDownload from\"js-file-download\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RenderForm(props){const[renderForm,setRenderForm]=useState();const[init,setInit]=useState(true);useEffect(()=>{if(init){setRenderForm(new Form({container:document.querySelector('#renderForm')}));setInit(false);}renderForm===null||renderForm===void 0?void 0:renderForm.clear();renderForm===null||renderForm===void 0?void 0:renderForm.reset();// @ts-ignore\n// renderForm?.on(\"submit\", ({data, errors}) => {\n//     console.log(data, errors);\n// });\nrenderForm===null||renderForm===void 0?void 0:renderForm.importSchema(props.schema).catch(error=>console.error(\"cannot import form schema\",error));},[props.schema]);function handleSubmit(event){event.preventDefault();// @ts-ignore\nconst{data,errors}=renderForm===null||renderForm===void 0?void 0:renderForm.submit();if(Object.keys(errors).length){console.error('Form submitted with errors',errors);}const config={headers:{'content-type':'application/json','Access-Control-Allow-Origin':'*'}};const url='http://localhost:8080/api/data/'+props.schema.templateId;axios.post(url,data,config).then(response=>{FileDownload(response.data,'filled_form',\"application/pdf\");}).catch(reason=>console.log(reason));}return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{id:\"renderForm\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]});}export default RenderForm;","map":{"version":3,"names":["React","useEffect","useState","Form","axios","FileDownload","jsx","_jsx","jsxs","_jsxs","RenderForm","props","renderForm","setRenderForm","init","setInit","container","document","querySelector","clear","reset","importSchema","schema","catch","error","console","handleSubmit","event","preventDefault","data","errors","submit","Object","keys","length","config","headers","url","templateId","post","then","response","reason","log","onSubmit","children","id","type"],"sources":["/Users/Shivaji/Workspace/Play/cta/ui/src/RenderForm.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {Form} from '@bpmn-io/form-js';\nimport \"@bpmn-io/form-js/dist/assets/form-js.css\";\nimport axios from \"axios\";\nimport FileDownload from \"js-file-download\";\n\nfunction RenderForm(props: any) {\n    const [renderForm, setRenderForm] = useState<Form>()\n    const [init, setInit] = useState<boolean>(true)\n\n    useEffect(() => {\n        if (init) {\n            setRenderForm(new Form({\n                container: document.querySelector('#renderForm')\n            }));\n            setInit(false)\n        }\n        renderForm?.clear();\n        renderForm?.reset();\n        // @ts-ignore\n        // renderForm?.on(\"submit\", ({data, errors}) => {\n        //     console.log(data, errors);\n        // });\n        renderForm?.importSchema(props.schema,)\n            .catch((error) => console.error(\"cannot import form schema\", error));\n    }, [props.schema]);\n\n    function handleSubmit(event: any) {\n        event.preventDefault()\n        // @ts-ignore\n        const {data, errors} = renderForm?.submit();\n        if (Object.keys(errors).length) {\n            console.error('Form submitted with errors', errors);\n        }\n        const config = {\n            headers: {\n                'content-type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n        };\n        const url = 'http://localhost:8080/api/data/' + props.schema.templateId;\n        axios.post(url, data, config).then((response) => {\n            FileDownload(response.data, 'filled_form', \"application/pdf\");\n        }).catch(reason => console.log(reason));\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div id=\"renderForm\"></div>\n            <button type=\"submit\">Submit</button>\n        </form>\n\n    );\n}\n\nexport default RenderForm;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAChD,MAAO,WAAW,CAClB,OAAQC,IAAI,KAAO,kBAAkB,CACrC,MAAO,0CAA0C,CACjD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,YAAY,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5C,QAAS,CAAAC,UAAUA,CAACC,KAAU,CAAE,CAC5B,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAO,CAAC,CACpD,KAAM,CAACY,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAU,IAAI,CAAC,CAE/CD,SAAS,CAAC,IAAM,CACZ,GAAIa,IAAI,CAAE,CACND,aAAa,CAAC,GAAI,CAAAV,IAAI,CAAC,CACnBa,SAAS,CAAEC,QAAQ,CAACC,aAAa,CAAC,aAAa,CACnD,CAAC,CAAC,CAAC,CACHH,OAAO,CAAC,KAAK,CAAC,CAClB,CACAH,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAEO,KAAK,CAAC,CAAC,CACnBP,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAEQ,KAAK,CAAC,CAAC,CACnB;AACA;AACA;AACA;AACAR,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAES,YAAY,CAACV,KAAK,CAACW,MAAO,CAAC,CAClCC,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CAAC,CAC5E,CAAC,CAAE,CAACb,KAAK,CAACW,MAAM,CAAC,CAAC,CAElB,QAAS,CAAAI,YAAYA,CAACC,KAAU,CAAE,CAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB;AACA,KAAM,CAACC,IAAI,CAAEC,MAAM,CAAC,CAAGlB,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAEmB,MAAM,CAAC,CAAC,CAC3C,GAAIC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,MAAM,CAAE,CAC5BT,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEM,MAAM,CAAC,CACvD,CACA,KAAM,CAAAK,MAAM,CAAG,CACXC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,6BAA6B,CAAE,GACnC,CACJ,CAAC,CACD,KAAM,CAAAC,GAAG,CAAG,iCAAiC,CAAG1B,KAAK,CAACW,MAAM,CAACgB,UAAU,CACvElC,KAAK,CAACmC,IAAI,CAACF,GAAG,CAAER,IAAI,CAAEM,MAAM,CAAC,CAACK,IAAI,CAAEC,QAAQ,EAAK,CAC7CpC,YAAY,CAACoC,QAAQ,CAACZ,IAAI,CAAE,aAAa,CAAE,iBAAiB,CAAC,CACjE,CAAC,CAAC,CAACN,KAAK,CAACmB,MAAM,EAAIjB,OAAO,CAACkB,GAAG,CAACD,MAAM,CAAC,CAAC,CAC3C,CAEA,mBACIjC,KAAA,SAAMmC,QAAQ,CAAElB,YAAa,CAAAmB,QAAA,eACzBtC,IAAA,QAAKuC,EAAE,CAAC,YAAY,CAAM,CAAC,cAC3BvC,IAAA,WAAQwC,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,QAAM,CAAQ,CAAC,EACnC,CAAC,CAGf,CAEA,cAAe,CAAAnC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}